€$
fC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\BuscarParaContrase√±a.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public 

partial 
class !
BuscarParaContrase√±a -
:. /
Window0 6
{ 
public !
BuscarParaContrase√±a #
(# $
)$ %
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
= 
ChecResults  +
.+ ,
Failed, 2
;2 3
if 
( 
	txtCorreo 
. 
Text 
== !
string" (
.( )
Empty) .
||/ 1

txtUsuario2 <
.< =
Text= A
==B D
stringE K
.K L
EmptyL Q
)Q R
{ 
check   
=   
ChecResults   #
.  # $
Failed  $ *
;  * +
}!! 
else"" 
{## 
check$$ 
=$$ 
ChecResults$$ #
.$$# $
Passed$$$ *
;$$* +
}%% 
return&& 
check&& 
;&& 
}'' 	
private** 
ChecResults** 
CheckFields** '
(**' (
)**( )
{++ 	
ChecResults,, 
check,, 
=,, 
ChecResults,,  +
.,,+ ,
Failed,,, 2
;,,2 3
Validaciones-- 
.-- 
ValidarCampos-- &
validarCampos--' 4
=--5 6
new--7 :
Validaciones--; G
.--G H
ValidarCampos--H U
(--U V
)--V W
;--W X
if.. 
(.. 
CheckEmptyFields..  
(..  !
)..! "
==..# %
ChecResults..& 1
...1 2
Failed..2 8
)..8 9
{// 

MessageBox00 
.00 
Show00 
(00  
$str00  ;
)00; <
;00< =
check11 
=11 
ChecResults11 #
.11# $
Failed11$ *
;11* +
}22 
else33 
if33 
(33 
validarCampos33 "
.33" #
ValidarCorreo33# 0
(330 1
	txtCorreo331 :
.33: ;
Text33; ?
)33? @
==33A C
Validaciones33D P
.33P Q
ValidarCampos33Q ^
.33^ _ 
ResultadosValidacion33_ s
.33s t
CorreoInvalido	33t Ç
)
33Ç É
{44 

MessageBox55 
.55 
Show55 
(55  
$str55  8
)558 9
;559 :
}66 
else77 
if77 
(77 
validarCampos77 "
.77" #
ValidarUsuario77# 1
(771 2

txtUsuario772 <
.77< =
Text77= A
)77A B
==77C E
Validaciones77F R
.77R S
ValidarCampos77S `
.77` a 
ResultadosValidacion77a u
.77u v
UsuarioInvalido	77v Ö
)
77Ö Ü
{88 

MessageBox99 
.99 
Show99 
(99  
$str99  9
)999 :
;99: ;
}:: 
else<< 
{== 
check>> 
=>> 
ChecResults>> #
.>># $
Passed>>$ *
;>>* +
}?? 
return@@ 
check@@ 
;@@ 
}AA 	
privateEE 
voidEE !
btnEnviarCodigo_ClickEE *
(EE* +
objectEE+ 1
senderEE2 8
,EE8 9
RoutedEventArgsEE: I
eEEJ K
)EEK L
{FF 	
ifII 
(II 
CheckFieldsII 
(II 
)II 
==II  
ChecResultsII! ,
.II, -
PassedII- 3
)II3 4
{JJ 
stringKK 
usuarioKK 
=KK  

txtUsuarioKK! +
.KK+ ,
TextKK, 0
;KK0 1
stringLL 
correoLL 
=LL 
	txtCorreoLL  )
.LL) *
TextLL* .
;LL. /
BuscarParaCambiarOO !
(OO! "
usuarioOO" )
,OO) *
correoOO+ 1
)OO1 2
;OO2 3
}QQ 
}UU 	
}VV 
}WW â
hC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ControladorDeAudio.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
{ 
public 

static 
class 
ControladorDeAudio *
{		 
private 
static 
MediaPlayer "
_mediaPlayer# /
=0 1
new2 5
MediaPlayer6 A
(A B
)B C
;C D
private 
static 
MediaPlayer "
_effectPlayer# 0
=1 2
new3 6
MediaPlayer7 B
(B C
)C D
;D E
public 
static 
void 
	OpenMusic $
($ %
string% +
relativePath, 8
)8 9
{ 	
OpenFileDialog 
openFileDialog )
=* +
new, /
OpenFileDialog0 >
(> ?
)? @
;@ A
openFileDialog 
. 
Filter !
=" #
$str$ Q
;Q R
if 
( 
openFileDialog 
. 

ShowDialog )
() *
)* +
==, .
true/ 3
)3 4
{ 
_mediaPlayer 
. 
Open !
(! "
new" %
Uri& )
() *
openFileDialog* 8
.8 9
FileName9 A
)A B
)B C
;C D
_mediaPlayer 
. 
Play !
(! "
)" #
;# $
} 
} 	
public 
static 
void 
PlayBackgroundMusic .
(. /
)/ 0
{ 	
_mediaPlayer 
. 
Open 
( 
new !
Uri" %
(% &
Path& *
.* +
Combine+ 2
(2 3
Environment3 >
.> ?
CurrentDirectory? O
,O P
$strQ o
)o p
)p q
)q r
;r s
_mediaPlayer 
. 
Play 
( 
) 
;  
}   	
public$$ 
static$$ 
void$$ 
PlayCardFlip$$ '
($$' (
)$$( )
{%% 	

PlayEffect&& 
(&& 
$str&& &
)&&& '
;&&' (
}'' 	
public)) 
static)) 
void)) 
PlayCorrecto)) '
())' (
)))( )
{** 	

PlayEffect++ 
(++ 
$str++ *
)++* +
;+++ ,
},, 	
public.. 
static.. 
void.. 
PlayIncorrecto.. )
(..) *
)..* +
{// 	

PlayEffect00 
(00 
$str00 ,
)00, -
;00- .
}11 	
private88 
static88 
void88 

PlayEffect88 &
(88& '
string88' -
fileName88. 6
)886 7
{99 	
_effectPlayer:: 
.:: 
Open:: 
(:: 
new:: "
Uri::# &
(::& '
Path::' +
.::+ ,
Combine::, 3
(::3 4
Environment::4 ?
.::? @
CurrentDirectory::@ P
,::P Q
$str::R \
+::] ^
fileName::_ g
)::g h
)::h i
)::i j
;::j k
_effectPlayer;; 
.;; 
Play;; 
(;; 
);;  
;;;  !
}<< 	
}>> 
}?? í
iC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\Models\PictureModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $
Modelos$ +
{ 
public 

class 
PictureModel 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
ImageSource !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ˙&
rC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\GameInfoViewModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 	
class 
GameInfoViewModel "
:# $
ObservableObject% 5
{ 
private 
const 
int 
_maxAttempts &
=' (
$num) *
;* +
private 
const 
int 
_pointAward %
=& '
$num( *
;* +
private 
const 
int 
_pointDeduction )
=* +
$num, .
;. /
private 
int 
_matchAttempts "
;" #
private 
int 
_score 
; 
private 
bool 
	_gameLost 
; 
private 
bool 
_gameWon 
; 
public 
int 
MatchAttempts  
{ 	
get 
{ 
return 
_matchAttempts %
;% &
} 
private 
set 
{ 
_matchAttempts 
=  
value! &
;& '
OnPropertyChanged   !
(  ! "
$str  " 1
)  1 2
;  2 3
}!! 
}"" 	
public$$ 
int$$ 
Score$$ 
{%% 	
get&& 
{'' 
return(( 
_score(( 
;(( 
})) 
private** 
set** 
{++ 
_score,, 
=,, 
value,, 
;,, 
Memorama_Client-- 
.--  

Properties--  *
.--* +
Settings--+ 3
.--3 4
Default--4 ;
.--; <
puntaje--< C
=--D E
value--F K
;--K L
OnPropertyChanged.. !
(..! "
$str.." )
)..) *
;..* +
}// 
}00 	
public22 

Visibility22 
LostMessage22 %
{33 	
get44 
{55 
if66 
(66 
	_gameLost66 
)66 
return77 

Visibility77 %
.77% &
Visible77& -
;77- .
return99 

Visibility99 !
.99! "
Hidden99" (
;99( )
}:: 
};; 	
public== 

Visibility== 

WinMessage== $
{>> 	
get?? 
{@@ 
ifAA 
(AA 
_gameWonAA 
)AA 
returnBB 

VisibilityBB %
.BB% &
VisibleBB& -
;BB- .
returnDD 

VisibilityDD !
.DD! "
HiddenDD" (
;DD( )
}EE 
}FF 	
publicHH 
voidHH 

GameStatusHH 
(HH 
boolHH #
winHH$ '
)HH' (
{II 	
ifJJ 
(JJ 
!JJ 
winJJ 
)JJ 
{KK 
	_gameLostLL 
=LL 
trueLL  
;LL  !
OnPropertyChangedMM !
(MM! "
$strMM" /
)MM/ 0
;MM0 1
}NN 
ifPP 
(PP 
winPP 
)PP 
{QQ 
_gameWonRR 
=RR 
trueRR 
;RR  
OnPropertyChangedSS !
(SS! "
$strSS" .
)SS. /
;SS/ 0
}TT 
}UU 	
publicWW 
voidWW 
	ClearInfoWW 
(WW 
)WW 
{XX 	
ScoreYY 
=YY 
$numYY 
;YY 
MatchAttemptsZZ 
=ZZ 
_maxAttemptsZZ (
;ZZ( )
	_gameLost[[ 
=[[ 
false[[ 
;[[ 
_gameWon\\ 
=\\ 
false\\ 
;\\ 
OnPropertyChanged]] 
(]] 
$str]] +
)]]+ ,
;]], -
OnPropertyChanged^^ 
(^^ 
$str^^ *
)^^* +
;^^+ ,
}__ 	
publicaa 
voidaa 
Awardaa 
(aa 
)aa 
{bb 	
Scorecc 
+=cc 
_pointAwardcc  
;cc  !
ControladorDeAudiodd 
.dd 
PlayCorrectodd +
(dd+ ,
)dd, -
;dd- .
}ee 	
publicgg 
voidgg 
Penalizegg 
(gg 
)gg 
{hh 	
Scoreii 
-=ii 
_pointDeductionii $
;ii$ %
MatchAttemptsjj 
--jj 
;jj 
ControladorDeAudiokk 
.kk 
PlayIncorrectokk -
(kk- .
)kk. /
;kk/ 0
}ll 	
}mm 
}nn π,
nC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\GameViewModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 

enum 
SlideCategories 
{		 
Cartas

 
,

 
Animals 
, 
Cars 
, 
Foods 
} 
public 

class 
GameViewModel 
:  
ObservableObject! 1
{ 
public $
SlideCollectionViewModel '
Slides( .
{/ 0
get1 4
;4 5
private6 =
set> A
;A B
}C D
public 
GameInfoViewModel  
GameInfo! )
{* +
get, /
;/ 0
private1 8
set9 <
;< =
}> ?
public 
TimerViewModel 
Timer #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
public 
SlideCategories 
Category '
{( )
get* -
;- .
private/ 6
set7 :
;: ;
}< =
public   
GameViewModel   
(   
SlideCategories   ,
category  - 5
)  5 6
{!! 	
Category"" 
="" 
category"" 
;""  
	SetupGame## 
(## 
category## 
)## 
;##  
}$$ 	
private'' 
void'' 
	SetupGame'' 
('' 
SlideCategories'' .
category''/ 7
)''7 8
{(( 	
Slides** 
=** 
new** $
SlideCollectionViewModel** 1
(**1 2
)**2 3
;**3 4
Timer++ 
=++ 
new++ 
TimerViewModel++ &
(++& '
new++' *
TimeSpan+++ 3
(++3 4
$num++4 5
,++5 6
$num++7 8
,++8 9
$num++: ;
)++; <
)++< =
;++= >
GameInfo,, 
=,, 
new,, 
GameInfoViewModel,, ,
(,,, -
),,- .
;,,. /
GameInfo// 
.// 
	ClearInfo// 
(// 
)//  
;//  !
Slides22 
.22 
CreateSlides22 
(22  
$str22  )
+22* +
category22, 4
.224 5
ToString225 =
(22= >
)22> ?
)22? @
;22@ A
Slides33 
.33 
Memorize33 
(33 
)33 
;33 
Timer66 
.66 
Start66 
(66 
)66 
;66 
OnPropertyChanged99 
(99 
$str99 &
)99& '
;99' (
OnPropertyChanged:: 
(:: 
$str:: %
)::% &
;::& '
OnPropertyChanged;; 
(;; 
$str;; (
);;( )
;;;) *
}<< 	
public?? 
void?? 
ClickedSlide??  
(??  !
object??! '
slide??( -
)??- .
{@@	 

ifAA 
(AA 
SlidesAA 
.AA 
	canSelectAA  
)AA  !
{BB 
varCC 
selectedCC 
=CC 
slideCC $
asCC% '
PictureViewModelCC( 8
;CC8 9
SlidesDD 
.DD 
SelectSlideDD "
(DD" #
selectedDD# +
)DD+ ,
;DD, -
}EE 
ifGG 
(GG 
!GG 
SlidesGG 
.GG 
areSlidesActiveGG '
)GG' (
{HH 
ifII 
(II 
SlidesII 
.II 
CheckIfMatchedII )
(II) *
)II* +
)II+ ,
GameInfoJJ 
.JJ 
AwardJJ "
(JJ" #
)JJ# $
;JJ$ %
elseKK 
GameInfoLL 
.LL 
PenalizeLL %
(LL% &
)LL& '
;LL' (
}MM 

GameStatusOO 
(OO 
)OO 
;OO 
}PP 	
privateSS 
voidSS 

GameStatusSS 
(SS  
)SS  !
{TT 	
ifUU 
(UU 
GameInfoUU 
.UU 
MatchAttemptsUU &
<UU' (
$numUU) *
)UU* +
{VV 
GameInfoWW 
.WW 

GameStatusWW #
(WW# $
falseWW$ )
)WW) *
;WW* +
SlidesXX 
.XX 
RevealUnmatchedXX &
(XX& '
)XX' (
;XX( )
TimerYY 
.YY 
StopYY 
(YY 
)YY 
;YY 
}ZZ 
if\\ 
(\\ 
Slides\\ 
.\\ 
AllSlidesMatched\\ '
)\\' (
{]] 
GameInfo^^ 
.^^ 

GameStatus^^ #
(^^# $
true^^$ (
)^^( )
;^^) *
Timer`` 
.`` 
Stop`` 
(`` 
)`` 
;`` 
}aa 
}bb 	
publicee 
voidee 
Restartee 
(ee 
)ee 
{ff 	
ControladorDeAudiogg 
.gg 
PlayIncorrectogg -
(gg- .
)gg. /
;gg/ 0
	SetupGamehh 
(hh 
Categoryhh 
)hh 
;hh  
}ii 	
}kk 
}ll ˝
qC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\ObservableObject.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 	
class
 
ObservableObject  
:! ""
INotifyPropertyChanged# 9
{ 
public 
event '
PropertyChangedEventHandler 0
PropertyChanged1 @
;@ A
public 
void 
OnPropertyChanged %
(% &
string& ,
propertyName- 9
)9 :
{ 	'
PropertyChangedEventHandler '
handler( /
=0 1
PropertyChanged2 A
;A B
if 
( 
handler 
!= 
null 
)  
handler! (
(( )
this) -
,- .
new/ 2$
PropertyChangedEventArgs3 K
(K L
propertyNameL X
)X Y
)Y Z
;Z [
} 	
} 
} ≥,
qC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\PictureViewModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 

class 
PictureViewModel !
:" #
ObservableObject$ 4
{ 
private 
PictureModel 
_model #
;# $
public 
int 
Id 
{ 
get 
; 
private $
set% (
;( )
}* +
private 
bool 
	_isViewed 
; 
private 
bool 

_isMatched 
;  
private 
bool 
	_isFailed 
; 
public 
bool 
isViewed 
{ 	
get 
{ 
return 
	_isViewed  
;  !
}   
private!! 
set!! 
{"" 
	_isViewed## 
=## 
value## !
;##! "
OnPropertyChanged$$ !
($$! "
$str$$" .
)$$. /
;$$/ 0
OnPropertyChanged%% !
(%%! "
$str%%" /
)%%/ 0
;%%0 1
}&& 
}'' 	
public** 
bool** 
	isMatched** 
{++ 	
get,, 
{-- 
return.. 

_isMatched.. !
;..! "
}// 
private00 
set00 
{11 

_isMatched22 
=22 
value22 "
;22" #
OnPropertyChanged33 !
(33! "
$str33" .
)33. /
;33/ 0
OnPropertyChanged44 !
(44! "
$str44" /
)44/ 0
;440 1
}55 
}66 	
public99 
bool99 
isFailed99 
{:: 	
get;; 
{<< 
return== 
	_isFailed==  
;==  !
}>> 
private?? 
set?? 
{@@ 
	_isFailedAA 
=AA 
valueAA !
;AA! "
OnPropertyChangedBB !
(BB! "
$strBB" .
)BB. /
;BB/ 0
OnPropertyChangedCC !
(CC! "
$strCC" /
)CC/ 0
;CC0 1
}DD 
}EE 	
publicHH 
boolHH 
isSelectableHH  
{II 	
getJJ 
{KK 
ifLL 
(LL 
	isMatchedLL 
)LL 
returnMM 
falseMM  
;MM  !
ifNN 
(NN 
isViewedNN 
)NN 
returnOO 
falseOO  
;OO  !
returnQQ 
trueQQ 
;QQ 
}RR 
}SS 	
publicVV 
stringVV 

SlideImageVV  
{WW 	
getXX 
{YY 
ifZZ 
(ZZ 
	isMatchedZZ 
)ZZ 
return[[ 
_model[[ !
.[[! "
ImageSource[[" -
;[[- .
if\\ 
(\\ 
isViewed\\ 
)\\ 
return]] 
_model]] !
.]]! "
ImageSource]]" -
;]]- .
return`` 
$str`` L
;``L M
}aa 
}bb 	
publicee 
Brushee 
BorderBrushee  
{ff 	
getgg 
{hh 
ifii 
(ii 
isFailedii 
)ii 
returnjj 
Brushesjj "
.jj" #
Redjj# &
;jj& '
ifkk 
(kk 
	isMatchedkk 
)kk 
returnll 
Brushesll "
.ll" #
Greenll# (
;ll( )
ifmm 
(mm 
isViewedmm 
)mm 
returnnn 
Brushesnn "
.nn" #
Yellownn# )
;nn) *
returnpp 
Brushespp 
.pp 
Blackpp $
;pp$ %
}qq 
}rr 	
publicuu 
PictureViewModeluu 
(uu  
PictureModeluu  ,
modeluu- 2
)uu2 3
{vv 	
_modelww 
=ww 
modelww 
;ww 
Idxx 
=xx 
modelxx 
.xx 
Idxx 
;xx 
}yy 	
public|| 
void|| 
MarkMatched|| 
(||  
)||  !
{}} 	
	isMatched~~ 
=~~ 
true~~ 
;~~ 
} 	
public
ÇÇ 
void
ÇÇ 

MarkFailed
ÇÇ 
(
ÇÇ 
)
ÇÇ  
{
ÉÉ 	
isFailed
ÑÑ 
=
ÑÑ 
true
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
public
àà 
void
àà 
	ClosePeek
àà 
(
àà 
)
àà 
{
ââ 	
isViewed
ää 
=
ää 
false
ää 
;
ää 
isFailed
ãã 
=
ãã 
false
ãã 
;
ãã 
OnPropertyChanged
åå 
(
åå 
$str
åå ,
)
åå, -
;
åå- .
OnPropertyChanged
çç 
(
çç 
$str
çç *
)
çç* +
;
çç+ ,
}
éé 	
public
ëë 
void
ëë 
PeekAtImage
ëë 
(
ëë  
)
ëë  !
{
íí 	
isViewed
ìì 
=
ìì 
true
ìì 
;
ìì 
OnPropertyChanged
îî 
(
îî 
$str
îî *
)
îî* +
;
îî+ ,
}
ïï 	
}
ññ 
}óó öp
yC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\SlideCollectionViewModel.cs
	namespace

 	
Memorama_Client


 
.

 
	JuegoBase

 #
.

# $

ViewModels

$ .
{ 
public 

class $
SlideCollectionViewModel )
:* +
ObservableObject, <
{ 
public  
ObservableCollection #
<# $
PictureViewModel$ 4
>4 5
MemorySlides6 B
{C D
getE H
;H I
privateJ Q
setR U
;U V
}W X
private 
PictureViewModel  
SelectedSlide1! /
;/ 0
private 
PictureViewModel  
SelectedSlide2! /
;/ 0
private 
DispatcherTimer 

_peekTimer  *
;* +
private 
DispatcherTimer 
_openingTimer  -
;- .
private"" 
const"" 
int"" 
_peekSeconds"" &
=""' (
$num"") *
;""* +
private$$ 
const$$ 
int$$ 
_openSeconds$$ &
=$$' (
$num$$) *
;$$* +
public'' 
bool'' 
areSlidesActive'' #
{(( 	
get)) 
{** 
if++ 
(++ 
SelectedSlide1++ "
==++# %
null++& *
||+++ -
SelectedSlide2++. <
==++= ?
null++@ D
)++D E
return,, 
true,, 
;,,  
return.. 
false.. 
;.. 
}// 
}00 	
public33 
bool33 
AllSlidesMatched33 $
{44 	
get55 
{66 
foreach77 
(77 
var77 
slide77 "
in77# %
MemorySlides77& 2
)772 3
{88 
if99 
(99 
!99 
slide99 
.99 
	isMatched99 (
)99( )
return:: 
false:: $
;::$ %
};; 
return== 
true== 
;== 
}>> 
}?? 	
publicBB 
boolBB 
	canSelectBB 
{BB 
getBB  #
;BB# $
privateBB% ,
setBB- 0
;BB0 1
}BB2 3
publicEE $
SlideCollectionViewModelEE '
(EE' (
)EE( )
{FF 	

_peekTimerGG 
=GG 
newGG 
DispatcherTimerGG ,
(GG, -
)GG- .
;GG. /

_peekTimerHH 
.HH 
IntervalHH 
=HH  !
newHH" %
TimeSpanHH& .
(HH. /
$numHH/ 0
,HH0 1
$numHH2 3
,HH3 4
_peekSecondsHH5 A
)HHA B
;HHB C

_peekTimerII 
.II 
TickII 
+=II 
PeekTimer_TickII -
;II- .
_openingTimerKK 
=KK 
newKK 
DispatcherTimerKK  /
(KK/ 0
)KK0 1
;KK1 2
_openingTimerLL 
.LL 
IntervalLL "
=LL# $
newLL% (
TimeSpanLL) 1
(LL1 2
$numLL2 3
,LL3 4
$numLL5 6
,LL6 7
_openSecondsLL8 D
)LLD E
;LLE F
_openingTimerMM 
.MM 
TickMM 
+=MM !
OpeningTimer_TickMM" 3
;MM3 4
}NN 	
publicQQ 
voidQQ 
CreateSlidesQQ  
(QQ  !
stringQQ! '

imagesPathQQ( 2
)QQ2 3
{RR 	
MemorySlidesTT 
=TT 
newTT  
ObservableCollectionTT 3
<TT3 4
PictureViewModelTT4 D
>TTD E
(TTE F
)TTF G
;TTG H
varUU 
modelsUU 
=UU 
GetModelsFromUU &
(UU& '
@imagesPathUU' 2
)UU2 3
;UU3 4
forXX 
(XX 
intXX 
iXX 
=XX 
$numXX 
;XX 
iXX 
<XX 
$numXX  !
;XX! "
iXX# $
++XX$ &
)XX& '
{YY 
var[[ 
newSlide[[ 
=[[ 
new[[ "
PictureViewModel[[# 3
([[3 4
models[[4 :
[[[: ;
i[[; <
][[< =
)[[= >
;[[> ?
var\\ 
newSlideMatch\\ !
=\\" #
new\\$ '
PictureViewModel\\( 8
(\\8 9
models\\9 ?
[\\? @
i\\@ A
]\\A B
)\\B C
;\\C D
MemorySlides^^ 
.^^ 
Add^^  
(^^  !
newSlide^^! )
)^^) *
;^^* +
MemorySlides__ 
.__ 
Add__  
(__  !
newSlideMatch__! .
)__. /
;__/ 0
newSlideaa 
.aa 
PeekAtImageaa $
(aa$ %
)aa% &
;aa& '
newSlideMatchbb 
.bb 
PeekAtImagebb )
(bb) *
)bb* +
;bb+ ,
}cc 
ShuffleSlidesee 
(ee 
)ee 
;ee 
OnPropertyChangedff 
(ff 
$strff ,
)ff, -
;ff- .
}gg 	
publicjj 
voidjj 
SelectSlidejj 
(jj  
PictureViewModeljj  0
slidejj1 6
)jj6 7
{kk 	
slidell 
.ll 
PeekAtImagell 
(ll 
)ll 
;ll  
ifnn 
(nn 
SelectedSlide1nn 
==nn !
nullnn" &
)nn& '
{oo 
SelectedSlide1pp 
=pp  
slidepp! &
;pp& '
}qq 
elserr 
ifrr 
(rr 
SelectedSlide2rr #
==rr$ &
nullrr' +
)rr+ ,
{ss 
SelectedSlide2tt 
=tt  
slidett! &
;tt& '
HideUnmatcheduu 
(uu 
)uu 
;uu  
}vv 
ControladorDeAudioxx 
.xx 
PlayCardFlipxx +
(xx+ ,
)xx, -
;xx- .
OnPropertyChangedyy 
(yy 
$stryy /
)yy/ 0
;yy0 1
}zz 	
public}} 
bool}} 
CheckIfMatched}} "
(}}" #
)}}# $
{~~ 	
if 
( 
SelectedSlide1 
. 
Id !
==" $
SelectedSlide2% 3
.3 4
Id4 6
)6 7
{
ÄÄ 
MatchCorrect
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
return
ÇÇ 
true
ÇÇ 
;
ÇÇ 
}
ÉÉ 
else
ÑÑ 
{
ÖÖ 
MatchFailed
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
return
áá 
false
áá 
;
áá 
}
àà 
}
ââ 	
private
åå 
void
åå 
MatchFailed
åå  
(
åå  !
)
åå! "
{
çç 	
SelectedSlide1
éé 
.
éé 

MarkFailed
éé %
(
éé% &
)
éé& '
;
éé' (
SelectedSlide2
èè 
.
èè 

MarkFailed
èè %
(
èè% &
)
èè& '
;
èè' (
ClearSelected
êê 
(
êê 
)
êê 
;
êê 
}
ëë 	
private
îî 
void
îî 
MatchCorrect
îî !
(
îî! "
)
îî" #
{
ïï 	
SelectedSlide1
ññ 
.
ññ 
MarkMatched
ññ &
(
ññ& '
)
ññ' (
;
ññ( )
SelectedSlide2
óó 
.
óó 
MarkMatched
óó &
(
óó& '
)
óó' (
;
óó( )
ClearSelected
òò 
(
òò 
)
òò 
;
òò 
}
ôô 	
private
úú 
void
úú 
ClearSelected
úú "
(
úú" #
)
úú# $
{
ùù 	
SelectedSlide1
ûû 
=
ûû 
null
ûû !
;
ûû! "
SelectedSlide2
üü 
=
üü 
null
üü !
;
üü! "
	canSelect
†† 
=
†† 
false
†† 
;
†† 
}
°° 	
public
§§ 
void
§§ 
RevealUnmatched
§§ #
(
§§# $
)
§§$ %
{
•• 	
foreach
¶¶ 
(
¶¶ 
var
¶¶ 
slide
¶¶ 
in
¶¶ !
MemorySlides
¶¶" .
)
¶¶. /
{
ßß 
if
®® 
(
®® 
!
®® 
slide
®® 
.
®® 
	isMatched
®® $
)
®®$ %
{
©© 

_peekTimer
™™ 
.
™™ 
Stop
™™ #
(
™™# $
)
™™$ %
;
™™% &
slide
´´ 
.
´´ 

MarkFailed
´´ $
(
´´$ %
)
´´% &
;
´´& '
slide
¨¨ 
.
¨¨ 
PeekAtImage
¨¨ %
(
¨¨% &
)
¨¨& '
;
¨¨' (
}
≠≠ 
}
ÆÆ 
}
ØØ 	
public
≤≤ 
void
≤≤ 
HideUnmatched
≤≤ !
(
≤≤! "
)
≤≤" #
{
≥≥ 	

_peekTimer
¥¥ 
.
¥¥ 
Start
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 	
public
∏∏ 
void
∏∏ 
Memorize
∏∏ 
(
∏∏ 
)
∏∏ 
{
ππ 	
_openingTimer
∫∫ 
.
∫∫ 
Start
∫∫ 
(
∫∫  
)
∫∫  !
;
∫∫! "
}
ªª 	
private
ææ 
List
ææ 
<
ææ 
PictureModel
ææ !
>
ææ! "
GetModelsFrom
ææ# 0
(
ææ0 1
string
ææ1 7
relativePath
ææ8 D
)
ææD E
{
øø 	
var
¡¡ 
models
¡¡ 
=
¡¡ 
new
¡¡ 
List
¡¡ !
<
¡¡! "
PictureModel
¡¡" .
>
¡¡. /
(
¡¡/ 0
)
¡¡0 1
;
¡¡1 2
var
√√ 
images
√√ 
=
√√ 
	Directory
√√ "
.
√√" #
GetFiles
√√# +
(
√√+ ,
@relativePath
√√, 9
,
√√9 :
$str
√√; B
,
√√B C
SearchOption
√√D P
.
√√P Q
AllDirectories
√√Q _
)
√√_ `
;
√√` a
var
≈≈ 
id
≈≈ 
=
≈≈ 
$num
≈≈ 
;
≈≈ 
foreach
«« 
(
«« 
string
«« 
i
«« 
in
««  
images
««! '
)
««' (
{
»» 
models
…… 
.
…… 
Add
…… 
(
…… 
new
…… 
PictureModel
…… +
(
……+ ,
)
……, -
{
……. /
Id
……0 2
=
……3 4
id
……5 7
,
……7 8
ImageSource
……9 D
=
……E F
$str
……F c
+
……d e
i
……f g
}
……h i
)
……i j
;
……j k
id
   
++
   
;
   
}
ÀÀ 
return
ÕÕ 
models
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
private
—— 
void
—— 
ShuffleSlides
—— "
(
——" #
)
——# $
{
““ 	
var
‘‘ 
rnd
‘‘ 
=
‘‘ 
new
‘‘ 
Random
‘‘  
(
‘‘  !
)
‘‘! "
;
‘‘" #
for
÷÷ 
(
÷÷ 
int
÷÷ 
i
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
i
÷÷ 
<
÷÷ 
$num
÷÷  "
;
÷÷" #
i
÷÷$ %
++
÷÷% '
)
÷÷' (
{
◊◊ 
MemorySlides
ÿÿ 
.
ÿÿ 
Reverse
ÿÿ $
(
ÿÿ$ %
)
ÿÿ% &
;
ÿÿ& '
MemorySlides
ŸŸ 
.
ŸŸ 
Move
ŸŸ !
(
ŸŸ! "
rnd
ŸŸ" %
.
ŸŸ% &
Next
ŸŸ& *
(
ŸŸ* +
$num
ŸŸ+ ,
,
ŸŸ, -
MemorySlides
ŸŸ. :
.
ŸŸ: ;
Count
ŸŸ; @
)
ŸŸ@ A
,
ŸŸA B
rnd
ŸŸC F
.
ŸŸF G
Next
ŸŸG K
(
ŸŸK L
$num
ŸŸL M
,
ŸŸM N
MemorySlides
ŸŸO [
.
ŸŸ[ \
Count
ŸŸ\ a
)
ŸŸa b
)
ŸŸb c
;
ŸŸc d
}
⁄⁄ 
}
€€ 	
private
ﬁﬁ 
void
ﬁﬁ 
OpeningTimer_Tick
ﬁﬁ &
(
ﬁﬁ& '
object
ﬁﬁ' -
sender
ﬁﬁ. 4
,
ﬁﬁ4 5
	EventArgs
ﬁﬁ6 ?
e
ﬁﬁ@ A
)
ﬁﬁA B
{
ﬂﬂ 	
foreach
‡‡ 
(
‡‡ 
var
‡‡ 
slide
‡‡ 
in
‡‡ !
MemorySlides
‡‡" .
)
‡‡. /
{
·· 
slide
‚‚ 
.
‚‚ 
	ClosePeek
‚‚ 
(
‚‚  
)
‚‚  !
;
‚‚! "
	canSelect
„„ 
=
„„ 
true
„„  
;
„„  !
}
‰‰ 
OnPropertyChanged
ÂÂ 
(
ÂÂ 
$str
ÂÂ /
)
ÂÂ/ 0
;
ÂÂ0 1
_openingTimer
ÊÊ 
.
ÊÊ 
Stop
ÊÊ 
(
ÊÊ 
)
ÊÊ  
;
ÊÊ  !
}
ÁÁ 	
private
ÍÍ 
void
ÍÍ 
PeekTimer_Tick
ÍÍ #
(
ÍÍ# $
object
ÍÍ$ *
sender
ÍÍ+ 1
,
ÍÍ1 2
	EventArgs
ÍÍ3 <
e
ÍÍ= >
)
ÍÍ> ?
{
ÎÎ 	
foreach
ÏÏ 
(
ÏÏ 
var
ÏÏ 
slide
ÏÏ 
in
ÏÏ !
MemorySlides
ÏÏ" .
)
ÏÏ. /
{
ÌÌ 
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
slide
ÓÓ 
.
ÓÓ 
	isMatched
ÓÓ $
)
ÓÓ$ %
{
ÔÔ 
slide
 
.
 
	ClosePeek
 #
(
# $
)
$ %
;
% &
	canSelect
ÒÒ 
=
ÒÒ 
true
ÒÒ  $
;
ÒÒ$ %
}
ÚÚ 
}
ÛÛ 
OnPropertyChanged
ÙÙ 
(
ÙÙ 
$str
ÙÙ /
)
ÙÙ/ 0
;
ÙÙ0 1

_peekTimer
ıı 
.
ıı 
Stop
ıı 
(
ıı 
)
ıı 
;
ıı 
}
ˆˆ 	
}
¯¯ 
}˘˘ É
sC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\StartMenuViewModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 	
class 
StartMenuViewModel #
{ 
private 
Juego 
_mainWindow !
;! "
public 
StartMenuViewModel !
(! "
Juego" '
main( ,
), -
{ 	
_mainWindow 
= 
main 
; 
ControladorDeAudio 
. 
PlayBackgroundMusic 2
(2 3
)3 4
;4 5
} 	
public 
void 
StartNewGame  
(  !
int! $
categoryIndex% 2
)2 3
{ 	
var 
category 
= 
( 
SlideCategories +
)+ ,
categoryIndex, 9
;9 :
GameViewModel 
newGame !
=" #
new$ '
GameViewModel( 5
(5 6
category6 >
)> ?
;? @
_mainWindow 
. 
DataContext #
=$ %
newGame& -
;- .
} 	
} 
} ï
oC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\ViewModels\TimerViewModel.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $

ViewModels$ .
{ 
public 	
class
 
TimerViewModel 
:  
ObservableObject! 1
{ 
private 
DispatcherTimer 
_playedTimer  ,
;, -
private 
TimeSpan 
_timePlayed $
;$ %
public 
TimeSpan 
Time 
{ 	
get 
{ 
return 
_timePlayed "
;" #
} 
set 
{ 
_timePlayed 
= 
value #
;# $
OnPropertyChanged !
(! "
$str" (
)( )
;) *
} 
}   	
public"" 
TimerViewModel"" 
("" 
TimeSpan"" &
time""' +
)""+ ,
{## 	
_playedTimer$$ 
=$$ 
new$$ 
DispatcherTimer$$ .
($$. /
)$$/ 0
;$$0 1
_playedTimer%% 
.%% 
Interval%% !
=%%" #
time%%$ (
;%%( )
_playedTimer&& 
.&& 
Tick&& 
+=&&  
PlayedTimer_Tick&&! 1
;&&1 2
_timePlayed'' 
='' 
new'' 
TimeSpan'' &
(''& '
)''' (
;''( )
}(( 	
public** 
void** 
Start** 
(** 
)** 
{++ 	
_playedTimer,, 
.,, 
Start,, 
(,, 
),,  
;,,  !
}-- 	
public// 
void// 
Stop// 
(// 
)// 
{00 	
_playedTimer11 
.11 
Stop11 
(11 
)11 
;11  
}22 	
private44 
void44 
PlayedTimer_Tick44 %
(44% &
object44& ,
sender44- 3
,443 4
	EventArgs445 >
e44? @
)44@ A
{55 	
Time66 
=66 
_timePlayed66 
.66 
Add66 "
(66" #
new66# &
TimeSpan66' /
(66/ 0
$num660 1
,661 2
$num663 4
,664 5
$num666 7
)667 8
)668 9
;669 :
}77 	
}88 
}99 ≈
gC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\Vistas\Juego.xaml.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $
Vistas$ *
{ 
public 

partial 
class 
Juego 
:  
Window! '
{ 
public 
Juego 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
DataContext 
= 
new 
StartMenuViewModel 0
(0 1
this1 5
)5 6
;6 7
var 
	startMenu 
= 
DataContext '
as( *
StartMenuViewModel+ =
;= >
	startMenu 
. 
StartNewGame "
(" #
(# $
int$ '
)' (
SlideCategories( 7
.7 8
Animals8 ?
)? @
;@ A
} 	
} 	
} ¥
jC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoBase\Vistas\Memorama.xaml.cs
	namespace 	
Memorama_Client
 
. 
	JuegoBase #
.# $
Vistas$ *
{		 
public 

partial 
class 
Memorama !
:" #
UserControl$ /
{ 
public 
Memorama 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void 
Slide_Clicked "
(" #
object# )
sender* 0
,0 1
RoutedEventArgs2 A
eB C
)C D
{ 	
var 
game 
= 
DataContext "
as# %
GameViewModel& 3
;3 4
var 
button 
= 
sender 
as  "
Button# )
;) *
game 
. 
ClickedSlide 
( 
button $
.$ %
DataContext% 0
)0 1
;1 2
} 	
private 
void 
PlayAgain_c  
(  !
Object! '
sender( .
,. /
RoutedEventArgs0 ?
e@ A
)A B
{   	
String!! 
usuario!! 
=!! 
Memorama_Client!! *
.!!* +

Properties!!+ 5
.!!5 6
Settings!!6 >
.!!> ?
Default!!? F
.!!F G
UsuarioOnline!!G T
;!!T U
EnviarPuntaje"" 
("" 
usuario"" !
,""! "
Memorama_Client""# 2
.""2 3

Properties""3 =
.""= >
Settings""> F
.""F G
Default""G N
.""N O
puntaje""O V
)""V W
;""W X
var$$ 
game$$ 
=$$ 
DataContext$$ "
as$$# %
GameViewModel$$& 3
;$$3 4
game%% 
.%% 
Restart%% 
(%% 
)%% 
;%% 
}&& 	
}++ 
}-- ù%
tC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\GameInfoViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 	
class 
GameInfoViewModelM #
:$ %
ObservableObjectM& 7
{ 
private		 
const		 
int		 
_maxAttempts		 &
=		' (
$num		) *
;		* +
private

 
const

 
int

 
_pointAward

 %
=

& '
$num

( *
;

* +
private 
const 
int 
_pointDeduction )
=* +
$num, .
;. /
private 
int 
_matchAttempts "
;" #
private 
int 
_score 
; 
private 
bool 
	_gameLost 
; 
private 
bool 
_gameWon 
; 
public 
int 
MatchAttempts  
{ 	
get 
{ 
return 
_matchAttempts %
;% &
} 
private 
set 
{ 
_matchAttempts 
=  
value! &
;& '
OnPropertyChanged !
(! "
$str" 1
)1 2
;2 3
} 
} 	
public   
int   
Score   
{!! 	
get"" 
{## 
return$$ 
_score$$ 
;$$ 
}%% 
private&& 
set&& 
{'' 
_score(( 
=(( 
value(( 
;(( 
OnPropertyChanged)) !
())! "
$str))" )
)))) *
;))* +
}** 
}++ 	
public-- 

Visibility-- 
LostMessage-- %
{.. 	
get// 
{00 
if11 
(11 
	_gameLost11 
)11 
return22 

Visibility22 %
.22% &
Visible22& -
;22- .
return44 

Visibility44 !
.44! "
Hidden44" (
;44( )
}55 
}66 	
public88 

Visibility88 

WinMessage88 $
{99 	
get:: 
{;; 
if<< 
(<< 
_gameWon<< 
)<< 
return== 

Visibility== %
.==% &
Visible==& -
;==- .
return?? 

Visibility?? !
.??! "
Hidden??" (
;??( )
}@@ 
}AA 	
publicCC 
voidCC 

GameStatusCC 
(CC 
boolCC #
winCC$ '
)CC' (
{DD 	
ifEE 
(EE 
!EE 
winEE 
)EE 
{FF 
	_gameLostGG 
=GG 
trueGG  
;GG  !
OnPropertyChangedHH !
(HH! "
$strHH" /
)HH/ 0
;HH0 1
}II 
ifKK 
(KK 
winKK 
)KK 
{LL 
_gameWonMM 
=MM 
trueMM 
;MM  
OnPropertyChangedNN !
(NN! "
$strNN" .
)NN. /
;NN/ 0
}OO 
}PP 	
publicRR 
voidRR 
	ClearInfoRR 
(RR 
)RR 
{SS 	
ScoreTT 
=TT 
$numTT 
;TT 
MatchAttemptsUU 
=UU 
_maxAttemptsUU (
;UU( )
	_gameLostVV 
=VV 
falseVV 
;VV 
_gameWonWW 
=WW 
falseWW 
;WW 
OnPropertyChangedXX 
(XX 
$strXX +
)XX+ ,
;XX, -
OnPropertyChangedYY 
(YY 
$strYY *
)YY* +
;YY+ ,
}ZZ 	
public\\ 
void\\ 
Award\\ 
(\\ 
)\\ 
{]] 	
Score^^ 
+=^^ 
_pointAward^^  
;^^  !
ControladorDeAudio__ 
.__ 
PlayCorrecto__ +
(__+ ,
)__, -
;__- .
}`` 	
publicbb 
voidbb 
Penalizebb 
(bb 
)bb 
{cc 	
Scoredd 
-=dd 
_pointDeductiondd $
;dd$ %
MatchAttemptsee 
--ee 
;ee 
ControladorDeAudioff 
.ff 
PlayIncorrectoff -
(ff- .
)ff. /
;ff/ 0
}gg 	
}hh 
}ii Ê3
pC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\GameViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public		 

enum		 
SlideCategoriesM		  
{

 
Cartas 
, 
Animals 
, 
Cars 
, 
Foods 
} 
public 

class 
GameViewModelM 
:  !
ObservableObjectM" 3
{ 
public %
SlideCollectionViewModelM (
Slides) /
{0 1
get2 5
;5 6
private7 >
set? B
;B C
}D E
public 
GameInfoViewModelM !
GameInfo" *
{+ ,
get- 0
;0 1
private2 9
set: =
;= >
}? @
public 
TimerViewModelM 
Timer $
{% &
get' *
;* +
private, 3
set4 7
;7 8
}9 :
public 
SlideCategoriesM 
Category  (
{) *
get+ .
;. /
private0 7
set8 ;
;; <
}= >
public 
ServiciosCallBack  

calbacpapa! +
;+ ,
private 
int 
numero 
; 
public   
bool   
turno   
;   
public"" 
GameViewModelM"" 
("" 
SlideCategoriesM"" .
category""/ 7
,""7 8
int""9 <
numero""= C
,""C D
ServiciosCallBack""E V
callBack""W _
)""_ `
{## 	
this$$ 
.$$ 
numero$$ 
=$$ 
numero$$  
;$$  !
Category%% 
=%% 
category%% 
;%%  
	SetupGame&& 
(&& 
category&& 
)&& 
;&&  
this'' 
.'' 

calbacpapa'' 
='' 
callBack'' $
;''$ %
}(( 	
public** 
GameViewModelM** 
(** 
)** 
{**  !
}**" #
private-- 
void-- 
	SetupGame-- 
(-- 
SlideCategoriesM-- /
category--0 8
)--8 9
{.. 	
Slides00 
=00 
new00 %
SlideCollectionViewModelM00 2
(002 3
numero003 9
)009 :
;00: ;
Timer11 
=11 
new11 
TimerViewModelM11 '
(11' (
new11( +
TimeSpan11, 4
(114 5
$num115 6
,116 7
$num118 9
,119 :
$num11; <
)11< =
)11= >
;11> ?
GameInfo22 
=22 
new22 
GameInfoViewModelM22 -
(22- .
)22. /
;22/ 0
GameInfo55 
.55 
	ClearInfo55 
(55 
)55  
;55  !
Slides88 
.88 
CreateSlides88 
(88  
$str88  )
+88* +
category88, 4
.884 5
ToString885 =
(88= >
)88> ?
)88? @
;88@ A
Slides99 
.99 
Memorize99 
(99 
)99 
;99 
Timer<< 
.<< 
Start<< 
(<< 
)<< 
;<< 
OnPropertyChanged?? 
(?? 
$str?? &
)??& '
;??' (
OnPropertyChanged@@ 
(@@ 
$str@@ %
)@@% &
;@@& '
OnPropertyChangedAA 
(AA 
$strAA (
)AA( )
;AA) *
}BB 	
publicEE 
voidEE 
ClickedSlideEE  
(EE  !
objectEE! '
slideEE( -
)EE- .
{FF 	
ifGG 
(GG 
SlidesGG 
.GG 
	canSelectGG  
)GG  !
{HH 
varII 
selectedII 
=II 
slideII $
asII% '
PictureViewModelMII( 9
;II9 :
SlidesJJ 
.JJ 
SelectSlideJJ "
(JJ" #
selectedJJ# +
)JJ+ ,
;JJ, -
}KK 
ifMM 
(MM 
!MM 
SlidesMM 
.MM 
areSlidesActiveMM '
)MM' (
{NN 
ifOO 
(OO 
SlidesOO 
.OO 
CheckIfMatchedOO )
(OO) *
)OO* +
)OO+ ,
GameInfoQQ 
.QQ 
AwardQQ "
(QQ" #
)QQ# $
;QQ$ %
elseUU 
{VV 
ifWW 
(WW 
turnoWW 
)WW 
{XX 
CartaEquivocadaYY #
(YY# $

calbacpapaYY$ .
)YY. /
;YY/ 0
}[[ 
GameInfo]] 
.]] 
Penalize]] %
(]]% &
)]]& '
;]]' (
}bb 
}ee 

GameStatusgg 
(gg 
)gg 
;gg 
}hh 	
privatekk 
voidkk 

GameStatuskk 
(kk  
)kk  !
{ll 	
ifmm 
(mm 
GameInfomm 
.mm 
MatchAttemptsmm &
<mm' (
$nummm) *
)mm* +
{nn 
GameInfooo 
.oo 

GameStatusoo #
(oo# $
falseoo$ )
)oo) *
;oo* +
Slidespp 
.pp 
RevealUnmatchedpp &
(pp& '
)pp' (
;pp( )
Timerqq 
.qq 
Stopqq 
(qq 
)qq 
;qq 
}rr 
iftt 
(tt 
Slidestt 
.tt 
AllSlidesMatchedtt '
)tt' (
{uu 
GameInfovv 
.vv 

GameStatusvv #
(vv# $
truevv$ (
)vv( )
;vv) *
Timerww 
.ww 
Stopww 
(ww 
)ww 
;ww 
}xx 
}yy 	
public|| 
void|| 
Restart|| 
(|| 
)|| 
{}} 	
ControladorDeAudio~~ 
.~~ 
PlayIncorrecto~~ -
(~~- .
)~~. /
;~~/ 0
	SetupGame 
( 
Category 
) 
;  
}
ÄÄ 	
}
ÇÇ 
}ÉÉ Å	
sC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\ObservableObjectM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 	
class
 
ObservableObjectM !
:" #"
INotifyPropertyChanged$ :
{ 
public		 
event		 '
PropertyChangedEventHandler		 0
PropertyChanged		1 @
;		@ A
public 
void 
OnPropertyChanged %
(% &
string& ,
propertyName- 9
)9 :
{ 	'
PropertyChangedEventHandler '
handler( /
=0 1
PropertyChanged2 A
;A B
if 
( 
handler 
!= 
null 
)  
handler! (
(( )
this) -
,- .
new/ 2$
PropertyChangedEventArgs3 K
(K L
propertyNameL X
)X Y
)Y Z
;Z [
} 	
} 
} -
sC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\PictureViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 

class 
PictureViewModelM "
:# $
ObservableObjectM% 6
{		 
private 
PictureModel 
_model #
;# $
public 
int 
Id 
{ 
get 
; 
private $
set% (
;( )
}* +
private 
bool 
	_isViewed 
; 
private 
bool 

_isMatched 
;  
private 
bool 
	_isFailed 
; 
public 
PictureModel 
GetModel $
($ %
)% &
{' (
return 
_model 
; 
} 	
public 
bool 
isViewed 
{ 	
get 
{ 
return 
	_isViewed  
;  !
} 
private   
set   
{!! 
	_isViewed"" 
="" 
value"" !
;""! "
OnPropertyChanged## !
(##! "
$str##" .
)##. /
;##/ 0
OnPropertyChanged$$ !
($$! "
$str$$" /
)$$/ 0
;$$0 1
}%% 
}&& 	
public)) 
bool)) 
	isMatched)) 
{** 	
get++ 
{,, 
return-- 

_isMatched-- !
;--! "
}.. 
private// 
set// 
{00 

_isMatched11 
=11 
value11 "
;11" #
OnPropertyChanged22 !
(22! "
$str22" .
)22. /
;22/ 0
OnPropertyChanged33 !
(33! "
$str33" /
)33/ 0
;330 1
}44 
}55 	
public88 
bool88 
isFailed88 
{99 	
get:: 
{;; 
return<< 
	_isFailed<<  
;<<  !
}== 
private>> 
set>> 
{?? 
	_isFailed@@ 
=@@ 
value@@ !
;@@! "
OnPropertyChangedAA !
(AA! "
$strAA" .
)AA. /
;AA/ 0
OnPropertyChangedBB !
(BB! "
$strBB" /
)BB/ 0
;BB0 1
}CC 
}DD 	
publicGG 
boolGG 
isSelectableGG  
{HH 	
getII 
{JJ 
ifKK 
(KK 
	isMatchedKK 
)KK 
returnLL 
falseLL  
;LL  !
ifMM 
(MM 
isViewedMM 
)MM 
returnNN 
falseNN  
;NN  !
returnPP 
truePP 
;PP 
}QQ 
}RR 	
publicUU 
stringUU 

SlideImageUU  
{VV 	
getWW 
{XX 
ifYY 
(YY 
	isMatchedYY 
)YY 
returnZZ 
_modelZZ !
.ZZ! "
ImageSourceZZ" -
;ZZ- .
if[[ 
([[ 
isViewed[[ 
)[[ 
return\\ 
_model\\ !
.\\! "
ImageSource\\" -
;\\- .
return__ 
$str__ L
;__L M
}`` 
}aa 	
publicdd 
Brushdd 
BorderBrushdd  
{ee 	
getff 
{gg 
ifhh 
(hh 
isFailedhh 
)hh 
returnii 
Brushesii "
.ii" #
Redii# &
;ii& '
ifjj 
(jj 
	isMatchedjj 
)jj 
returnkk 
Brusheskk "
.kk" #
Greenkk# (
;kk( )
ifll 
(ll 
isViewedll 
)ll 
returnmm 
Brushesmm "
.mm" #
Yellowmm# )
;mm) *
returnoo 
Brushesoo 
.oo 
Blackoo $
;oo$ %
}pp 
}qq 	
publictt 
PictureViewModelMtt  
(tt  !
PictureModeltt! -
modeltt. 3
)tt3 4
{uu 	
_modelvv 
=vv 
modelvv 
;vv 
Idww 
=ww 
modelww 
.ww 
Idww 
;ww 
}xx 	
public{{ 
void{{ 
MarkMatched{{ 
({{  
){{  !
{|| 	
	isMatched}} 
=}} 
true}} 
;}} 
}~~ 	
public
ÅÅ 
void
ÅÅ 

MarkFailed
ÅÅ 
(
ÅÅ 
)
ÅÅ  
{
ÇÇ 	
isFailed
ÉÉ 
=
ÉÉ 
true
ÉÉ 
;
ÉÉ 
}
ÑÑ 	
public
áá 
void
áá 
	ClosePeek
áá 
(
áá 
)
áá 
{
àà 	
isViewed
ââ 
=
ââ 
false
ââ 
;
ââ 
isFailed
ää 
=
ää 
false
ää 
;
ää 
OnPropertyChanged
ãã 
(
ãã 
$str
ãã ,
)
ãã, -
;
ãã- .
OnPropertyChanged
åå 
(
åå 
$str
åå *
)
åå* +
;
åå+ ,
}
çç 	
public
êê 
void
êê 
PeekAtImage
êê 
(
êê  
)
êê  !
{
ëë 	
isViewed
íí 
=
íí 
true
íí 
;
íí 
OnPropertyChanged
ìì 
(
ìì 
$str
ìì *
)
ìì* +
;
ìì+ ,
}
îî 	
}
ïï 
}ññ ¶å
{C:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\SlideCollectionViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 

class %
SlideCollectionViewModelM *
:+ ,
ObservableObjectM- >
{ 
public  
ObservableCollection #
<# $
PictureViewModelM$ 5
>5 6
MemorySlides7 C
{D E
getF I
;I J
privateK R
setS V
;V W
}X Y
private 
PictureViewModelM !
SelectedSlide1" 0
;0 1
private 
PictureViewModelM !
SelectedSlide2" 0
;0 1
private 
DispatcherTimer 

_peekTimer  *
;* +
private 
DispatcherTimer 
_openingTimer  -
;- .
private 
const 
int 
_peekSeconds &
=' (
$num) *
;* +
private 
const 
int 
_openSeconds &
=' (
$num) *
;* +
private 
int 
numero 
; 
public"" 
bool"" 
areSlidesActive"" #
{## 	
get$$ 
{%% 
if&& 
(&& 
SelectedSlide1&& "
==&&# %
null&&& *
||&&+ -
SelectedSlide2&&. <
==&&= ?
null&&@ D
)&&D E
return'' 
true'' 
;''  
return)) 
false)) 
;)) 
}** 
}++ 	
public.. 
bool.. 
AllSlidesMatched.. $
{// 	
get00 
{11 
foreach22 
(22 
var22 
slide22 "
in22# %
MemorySlides22& 2
)222 3
{33 
if44 
(44 
!44 
slide44 
.44 
	isMatched44 (
)44( )
return55 
false55 $
;55$ %
}66 
return88 
true88 
;88 
}99 
}:: 	
public== 
bool== 
	canSelect== 
{== 
get==  #
;==# $
private==% ,
set==- 0
;==0 1
}==2 3
public@@ %
SlideCollectionViewModelM@@ (
(@@( )
int@@) ,
numero@@- 3
)@@3 4
{AA 	
thisBB 
.BB 
numeroBB 
=BB 
numeroBB  
;BB  !

_peekTimerCC 
=CC 
newCC 
DispatcherTimerCC ,
(CC, -
)CC- .
;CC. /

_peekTimerDD 
.DD 
IntervalDD 
=DD  !
newDD" %
TimeSpanDD& .
(DD. /
$numDD/ 0
,DD0 1
$numDD2 3
,DD3 4
_peekSecondsDD5 A
)DDA B
;DDB C

_peekTimerEE 
.EE 
TickEE 
+=EE 
PeekTimer_TickEE -
;EE- .
_openingTimerGG 
=GG 
newGG 
DispatcherTimerGG  /
(GG/ 0
)GG0 1
;GG1 2
_openingTimerHH 
.HH 
IntervalHH "
=HH# $
newHH% (
TimeSpanHH) 1
(HH1 2
$numHH2 3
,HH3 4
$numHH5 6
,HH6 7
_openSecondsHH8 D
)HHD E
;HHE F
_openingTimerII 
.II 
TickII 
+=II !
OpeningTimer_TickII" 3
;II3 4
}JJ 	
publicMM 
voidMM 
CreateSlidesMM  
(MM  !
stringMM! '

imagesPathMM( 2
)MM2 3
{NN 	
MemorySlidesPP 
=PP 
newPP  
ObservableCollectionPP 3
<PP3 4
PictureViewModelMPP4 E
>PPE F
(PPF G
)PPG H
;PPH I
varQQ 
modelsQQ 
=QQ 
GetModelsFromQQ &
(QQ& '
@imagesPathQQ' 2
)QQ2 3
;QQ3 4
forTT 
(TT 
intTT 
iTT 
=TT 
$numTT 
;TT 
iTT 
<TT 
$numTT  !
;TT! "
iTT# $
++TT$ &
)TT& '
{UU 
varWW 
newSlideWW 
=WW 
newWW "
PictureViewModelMWW# 4
(WW4 5
modelsWW5 ;
[WW; <
iWW< =
]WW= >
)WW> ?
;WW? @
varXX 
newSlideMatchXX !
=XX" #
newXX$ '
PictureViewModelMXX( 9
(XX9 :
modelsXX: @
[XX@ A
iXXA B
]XXB C
)XXC D
;XXD E
MemorySlidesZZ 
.ZZ 
AddZZ  
(ZZ  !
newSlideZZ! )
)ZZ) *
;ZZ* +
MemorySlides[[ 
.[[ 
Add[[  
([[  !
newSlideMatch[[! .
)[[. /
;[[/ 0
newSlide]] 
.]] 
PeekAtImage]] $
(]]$ %
)]]% &
;]]& '
newSlideMatch^^ 
.^^ 
PeekAtImage^^ )
(^^) *
)^^* +
;^^+ ,
}__ 
ShuffleSlidesaa 
(aa 
)aa 
;aa 
OnPropertyChangedbb 
(bb 
$strbb ,
)bb, -
;bb- .
}cc 	
publicff 
voidff 
SelectSlideff 
(ff  
PictureViewModelMff  1
slideff2 7
)ff7 8
{gg 	
slidehh 
.hh 
PeekAtImagehh 
(hh 
)hh 
;hh  
ifjj 
(jj 
SelectedSlide1jj 
==jj !
nulljj" &
)jj& '
{kk 
SelectedSlide1ll 
=ll  
slidell! &
;ll& '
}mm 
elsenn 
ifnn 
(nn 
SelectedSlide2nn #
==nn$ &
nullnn' +
)nn+ ,
{oo 
SelectedSlide2pp 
=pp  
slidepp! &
;pp& '
HideUnmatchedqq 
(qq 
)qq 
;qq  
}rr 
ControladorDeAudiott 
.tt 
PlayCardFliptt +
(tt+ ,
)tt, -
;tt- .
OnPropertyChangeduu 
(uu 
$struu /
)uu/ 0
;uu0 1
}vv 	
publicyy 
boolyy 
CheckIfMatchedyy "
(yy" #
)yy# $
{zz 	
if{{ 
({{ 
SelectedSlide1{{ 
.{{ 
Id{{ !
=={{" $
SelectedSlide2{{% 3
.{{3 4
Id{{4 6
){{6 7
{|| 
MatchCorrect}} 
(}} 
)}} 
;}} 
return~~ 
true~~ 
;~~ 
} 
else
ÄÄ 
{
ÅÅ 
MatchFailed
ÇÇ 
(
ÇÇ 
)
ÇÇ 
;
ÇÇ 
return
ÉÉ 
false
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
private
àà 
void
àà 
MatchFailed
àà  
(
àà  !
)
àà! "
{
ââ 	
SelectedSlide1
ää 
.
ää 

MarkFailed
ää %
(
ää% &
)
ää& '
;
ää' (
SelectedSlide2
ãã 
.
ãã 

MarkFailed
ãã %
(
ãã% &
)
ãã& '
;
ãã' (
ClearSelected
åå 
(
åå 
)
åå 
;
åå 
}
çç 	
private
êê 
void
êê 
MatchCorrect
êê !
(
êê! "
)
êê" #
{
ëë 	
SelectedSlide1
íí 
.
íí 
MarkMatched
íí &
(
íí& '
)
íí' (
;
íí( )
SelectedSlide2
ìì 
.
ìì 
MarkMatched
ìì &
(
ìì& '
)
ìì' (
;
ìì( )
ClearSelected
îî 
(
îî 
)
îî 
;
îî 
}
ïï 	
private
òò 
void
òò 
ClearSelected
òò "
(
òò" #
)
òò# $
{
ôô 	
SelectedSlide1
öö 
=
öö 
null
öö !
;
öö! "
SelectedSlide2
õõ 
=
õõ 
null
õõ !
;
õõ! "
	canSelect
úú 
=
úú 
false
úú 
;
úú 
}
ùù 	
public
†† 
void
†† 
RevealUnmatched
†† #
(
††# $
)
††$ %
{
°° 	
foreach
¢¢ 
(
¢¢ 
var
¢¢ 
slide
¢¢ 
in
¢¢ !
MemorySlides
¢¢" .
)
¢¢. /
{
££ 
if
§§ 
(
§§ 
!
§§ 
slide
§§ 
.
§§ 
	isMatched
§§ $
)
§§$ %
{
•• 

_peekTimer
¶¶ 
.
¶¶ 
Stop
¶¶ #
(
¶¶# $
)
¶¶$ %
;
¶¶% &
slide
ßß 
.
ßß 

MarkFailed
ßß $
(
ßß$ %
)
ßß% &
;
ßß& '
slide
®® 
.
®® 
PeekAtImage
®® %
(
®®% &
)
®®& '
;
®®' (
}
©© 
}
™™ 
}
´´ 	
public
ÆÆ 
void
ÆÆ 
HideUnmatched
ÆÆ !
(
ÆÆ! "
)
ÆÆ" #
{
ØØ 	

_peekTimer
∞∞ 
.
∞∞ 
Start
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
}
±± 	
public
¥¥ 
void
¥¥ 
Memorize
¥¥ 
(
¥¥ 
)
¥¥ 
{
µµ 	
_openingTimer
∂∂ 
.
∂∂ 
Start
∂∂ 
(
∂∂  
)
∂∂  !
;
∂∂! "
}
∑∑ 	
private
∫∫ 
List
∫∫ 
<
∫∫ 
PictureModel
∫∫ !
>
∫∫! "
GetModelsFrom
∫∫# 0
(
∫∫0 1
string
∫∫1 7
relativePath
∫∫8 D
)
∫∫D E
{
ªª 	
var
ΩΩ 
models
ΩΩ 
=
ΩΩ 
new
ΩΩ 
List
ΩΩ !
<
ΩΩ! "
PictureModel
ΩΩ" .
>
ΩΩ. /
(
ΩΩ/ 0
)
ΩΩ0 1
;
ΩΩ1 2
var
øø 
images
øø 
=
øø 
	Directory
øø "
.
øø" #
GetFiles
øø# +
(
øø+ ,
@relativePath
øø, 9
,
øø9 :
$str
øø; B
,
øøB C
SearchOption
øøD P
.
øøP Q
AllDirectories
øøQ _
)
øø_ `
;
øø` a
var
¡¡ 
id
¡¡ 
=
¡¡ 
$num
¡¡ 
;
¡¡ 
foreach
√√ 
(
√√ 
string
√√ 
i
√√ 
in
√√  
images
√√! '
)
√√' (
{
ƒƒ 
models
≈≈ 
.
≈≈ 
Add
≈≈ 
(
≈≈ 
new
≈≈ 
PictureModel
≈≈ +
(
≈≈+ ,
)
≈≈, -
{
≈≈. /
Id
≈≈0 2
=
≈≈3 4
id
≈≈5 7
,
≈≈7 8
ImageSource
≈≈9 D
=
≈≈E F
$str
≈≈F c
+
≈≈d e
i
≈≈f g
}
≈≈h i
)
≈≈i j
;
≈≈j k
id
∆∆ 
++
∆∆ 
;
∆∆ 
}
«« 
return
…… 
models
…… 
;
…… 
}
   	
private
ÕÕ 
void
ÕÕ 
ShuffleSlides
ÕÕ "
(
ÕÕ" #
)
ÕÕ# $
{
ŒŒ 	
if
œœ 
(
œœ 
numero
œœ 
==
œœ 
$num
œœ 
)
œœ 
{
—— 
for
““ 
(
““ 
int
““ 
i
““ 
=
““ 
$num
““ 
;
““ 
i
““  !
<
““" #
$num
““$ &
;
““& '
i
““( )
++
““) +
)
““+ ,
{
”” 
MemorySlides
’’  
.
’’  !
Reverse
’’! (
(
’’( )
)
’’) *
;
’’* +
MemorySlides
÷÷  
.
÷÷  !
Move
÷÷! %
(
÷÷% &
$num
÷÷& '
,
÷÷' (
$num
÷÷) *
)
÷÷* +
;
÷÷+ ,
MemorySlides
◊◊  
.
◊◊  !
Move
◊◊! %
(
◊◊% &
$num
◊◊& '
,
◊◊' (
$num
◊◊) *
)
◊◊* +
;
◊◊+ ,
MemorySlides
ÿÿ  
.
ÿÿ  !
Move
ÿÿ! %
(
ÿÿ% &
$num
ÿÿ& '
,
ÿÿ' (
$num
ÿÿ) *
)
ÿÿ* +
;
ÿÿ+ ,
}
⁄⁄ 
}
‹‹ 
else
‹‹ 
if
‹‹ 
(
‹‹ 
numero
‹‹ 
==
‹‹ 
$num
‹‹  
)
‹‹  !
{
›› 
MemorySlides
ﬁﬁ 
.
ﬁﬁ 
Reverse
ﬁﬁ $
(
ﬁﬁ$ %
)
ﬁﬁ% &
;
ﬁﬁ& '
MemorySlides
ﬂﬂ 
.
ﬂﬂ 
Move
ﬂﬂ !
(
ﬂﬂ! "
$num
ﬂﬂ" #
,
ﬂﬂ# $
$num
ﬂﬂ% &
)
ﬂﬂ& '
;
ﬂﬂ' (
MemorySlides
‡‡ 
.
‡‡ 
Move
‡‡ !
(
‡‡! "
$num
‡‡" #
,
‡‡# $
$num
‡‡% &
)
‡‡& '
;
‡‡' (
MemorySlides
·· 
.
·· 
Move
·· !
(
··! "
$num
··" #
,
··# $
$num
··% &
)
··& '
;
··' (
}
‚‚ 
else
‚‚ 
if
‚‚ 
(
‚‚ 
numero
‚‚ 
==
‚‚ 
$num
‚‚ 
)
‚‚ 
{
‚‚  
MemorySlides
‰‰ 
.
‰‰ 
Reverse
‰‰ $
(
‰‰$ %
)
‰‰% &
;
‰‰& '
MemorySlides
ÂÂ 
.
ÂÂ 
Move
ÂÂ !
(
ÂÂ! "
$num
ÂÂ" #
,
ÂÂ# $
$num
ÂÂ% &
)
ÂÂ& '
;
ÂÂ' (
MemorySlides
ÊÊ 
.
ÊÊ 
Move
ÊÊ !
(
ÊÊ! "
$num
ÊÊ" #
,
ÊÊ# $
$num
ÊÊ% &
)
ÊÊ& '
;
ÊÊ' (
MemorySlides
ÁÁ 
.
ÁÁ 
Move
ÁÁ !
(
ÁÁ! "
$num
ÁÁ" #
,
ÁÁ# $
$num
ÁÁ% &
)
ÁÁ& '
;
ÁÁ' (
}
ËË 
else
ÈÈ 
if
ÈÈ 
(
ÈÈ 
numero
ÈÈ 
==
ÈÈ 
$num
ÈÈ  
)
ÈÈ  !
{
ÍÍ 
MemorySlides
ÏÏ 
.
ÏÏ 
Reverse
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
;
ÏÏ& '
MemorySlides
ÌÌ 
.
ÌÌ 
Move
ÌÌ !
(
ÌÌ! "
$num
ÌÌ" #
,
ÌÌ# $
$num
ÌÌ% &
)
ÌÌ& '
;
ÌÌ' (
MemorySlides
ÓÓ 
.
ÓÓ 
Move
ÓÓ !
(
ÓÓ! "
$num
ÓÓ" #
,
ÓÓ# $
$num
ÓÓ% &
)
ÓÓ& '
;
ÓÓ' (
MemorySlides
ÔÔ 
.
ÔÔ 
Move
ÔÔ !
(
ÔÔ! "
$num
ÔÔ" #
,
ÔÔ# $
$num
ÔÔ% &
)
ÔÔ& '
;
ÔÔ' (
}
 
else
ÒÒ 
if
ÒÒ 
(
ÒÒ 
numero
ÒÒ 
==
ÒÒ 
$num
ÒÒ  
)
ÒÒ  !
{
ÚÚ 
MemorySlides
ÙÙ 
.
ÙÙ 
Reverse
ÙÙ $
(
ÙÙ$ %
)
ÙÙ% &
;
ÙÙ& '
MemorySlides
ıı 
.
ıı 
Move
ıı !
(
ıı! "
$num
ıı" #
,
ıı# $
$num
ıı% &
)
ıı& '
;
ıı' (
MemorySlides
ˆˆ 
.
ˆˆ 
Move
ˆˆ !
(
ˆˆ! "
$num
ˆˆ" #
,
ˆˆ# $
$num
ˆˆ% &
)
ˆˆ& '
;
ˆˆ' (
MemorySlides
˜˜ 
.
˜˜ 
Move
˜˜ !
(
˜˜! "
$num
˜˜" #
,
˜˜# $
$num
˜˜% &
)
˜˜& '
;
˜˜' (
MemorySlides
¯¯ 
.
¯¯ 
Move
¯¯ !
(
¯¯! "
$num
¯¯" #
,
¯¯# $
$num
¯¯% &
)
¯¯& '
;
¯¯' (
}
˘˘ 
}
˝˝ 	
private
ÄÄ 
void
ÄÄ 
OpeningTimer_Tick
ÄÄ &
(
ÄÄ& '
object
ÄÄ' -
sender
ÄÄ. 4
,
ÄÄ4 5
	EventArgs
ÄÄ6 ?
e
ÄÄ@ A
)
ÄÄA B
{
ÅÅ 	
foreach
ÇÇ 
(
ÇÇ 
var
ÇÇ 
slide
ÇÇ 
in
ÇÇ !
MemorySlides
ÇÇ" .
)
ÇÇ. /
{
ÉÉ 
slide
ÑÑ 
.
ÑÑ 
	ClosePeek
ÑÑ 
(
ÑÑ  
)
ÑÑ  !
;
ÑÑ! "
	canSelect
ÖÖ 
=
ÖÖ 
true
ÖÖ  
;
ÖÖ  !
}
ÜÜ 
OnPropertyChanged
áá 
(
áá 
$str
áá /
)
áá/ 0
;
áá0 1
_openingTimer
àà 
.
àà 
Stop
àà 
(
àà 
)
àà  
;
àà  !
}
ââ 	
private
åå 
void
åå 
PeekTimer_Tick
åå #
(
åå# $
object
åå$ *
sender
åå+ 1
,
åå1 2
	EventArgs
åå3 <
e
åå= >
)
åå> ?
{
çç 	
foreach
éé 
(
éé 
var
éé 
slide
éé 
in
éé !
MemorySlides
éé" .
)
éé. /
{
èè 
if
êê 
(
êê 
!
êê 
slide
êê 
.
êê 
	isMatched
êê $
)
êê$ %
{
ëë 
slide
íí 
.
íí 
	ClosePeek
íí #
(
íí# $
)
íí$ %
;
íí% &
	canSelect
ìì 
=
ìì 
true
ìì  $
;
ìì$ %
}
îî 
}
ïï 
OnPropertyChanged
ññ 
(
ññ 
$str
ññ /
)
ññ/ 0
;
ññ0 1

_peekTimer
óó 
.
óó 
Stop
óó 
(
óó 
)
óó 
;
óó 
}
òò 	
}
öö 
}õõ í
uC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\StartMenuViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 	
class 
StartMenuViewModelM $
{		 
private

 
JuegoM

 
_mainWindow

 "
;

" #
int 
	numrandom 
; 
private 
ServiciosCallBack !
callBack" *
;* +
public 
StartMenuViewModelM "
(" #
JuegoM# )
main* .
,. /
int0 3
numero4 :
,: ;
ServiciosCallBack; L
calbackM T
)T U
{ 	
	numrandom 
= 
numero 
; 
_mainWindow 
= 
main 
; 
this 
. 
callBack 
= 
calback #
;# $
ControladorDeAudio 
. 
PlayBackgroundMusic 2
(2 3
)3 4
;4 5
} 	
public 
void 
StartNewGame  
(  !
int! $
categoryIndex% 2
)2 3
{ 	
var 
category 
= 
( 
SlideCategoriesM ,
), -
categoryIndex- :
;: ;
GameViewModelM 
newGame "
=# $
new% (
GameViewModelM) 7
(7 8
category8 @
,@ A
	numrandomA J
,J K
callBackK S
)S T
;T U
_mainWindow 
. 
DataContext #
=$ %
newGame& -
;- .
} 	
} 
} û
qC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\ViewModels\TimerViewModelM.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %

ViewModels% /
{ 
public 	
class
 
TimerViewModelM 
:  !
ObservableObjectM" 3
{ 
private		 
DispatcherTimer		 
_playedTimer		  ,
;		, -
private

 
TimeSpan

 
_timePlayed

 $
;

$ %
private 
const 
int 
_playSeconds &
=' (
$num) *
;* +
public 
TimeSpan 
Time 
{ 	
get 
{ 
return 
_timePlayed "
;" #
} 
set 
{ 
_timePlayed 
= 
value #
;# $
OnPropertyChanged !
(! "
$str" (
)( )
;) *
} 
} 	
public 
TimerViewModelM 
( 
TimeSpan '
time( ,
), -
{ 	
_playedTimer 
= 
new 
DispatcherTimer .
(. /
)/ 0
;0 1
_playedTimer 
. 
Interval !
=" #
time$ (
;( )
_playedTimer 
. 
Tick 
+=  
PlayedTimer_Tick! 1
;1 2
_timePlayed   
=   
new   
TimeSpan   &
(  & '
)  ' (
;  ( )
}!! 	
public## 
void## 
Start## 
(## 
)## 
{$$ 	
_playedTimer%% 
.%% 
Start%% 
(%% 
)%%  
;%%  !
}&& 	
public(( 
void(( 
Stop(( 
((( 
)(( 
{)) 	
_playedTimer** 
.** 
Stop** 
(** 
)** 
;**  
}++ 	
private-- 
void-- 
PlayedTimer_Tick-- %
(--% &
object--& ,
sender--- 3
,--3 4
	EventArgs--5 >
e--? @
)--@ A
{.. 	
Time// 
=// 
_timePlayed// 
.// 
Add// "
(//" #
new//# &
TimeSpan//' /
(/// 0
$num//0 1
,//1 2
$num//3 4
,//4 5
$num//6 7
)//7 8
)//8 9
;//9 :
}00 	
}11 
}22 Ø
iC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\Vistas\JuegoM.xaml.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %
Vistas% +
{ 
public 

partial 
class 
JuegoM 
:  !
Window" (
{ 
public 
JuegoM 
( 
int 
numero  
,  !
ServiciosCallBack! 2
callBack3 ;
); <
{ 	
var 
callback 
= 
callBack #
;# $
int 
_numero 
= 
numero  
;  !
InitializeComponent 
(  
)  !
;! "
DataContext 
= 
new 
StartMenuViewModelM 1
(1 2
this2 6
,6 7
numero8 >
,> ?
callback@ H
)H I
;I J
var 
	startMenu 
= 
DataContext '
as( *
StartMenuViewModelM+ >
;> ?
	startMenu 
. 
StartNewGame "
(" #
(# $
int$ '
)' (
SlideCategoriesM( 8
.8 9
Animals9 @
)@ A
;A B
} 	
} 
} ˛ã
lC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\JuegoMulti\Vistas\MemoramaM.xaml.cs
	namespace 	
Memorama_Client
 
. 

JuegoMulti $
.$ %
Vistas% +
{ 
public 

partial 
class 
	MemoramaM "
:# $
UserControl% 0
{ 
public 
ServiciosCallBack  
calbackpapa! ,
;, -
private 
bool 
turnoCliente !
;! "
public 
	MemoramaM 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
this 
. 
Loaded 
+= 
new 
RoutedEventHandler 1
(1 2
UserControl_Loaded2 D
)D E
;E F
}"" 	
private$$ 
void$$ 
UserControl_Loaded$$ '
($$' (
object$$( .
sender$$/ 5
,$$5 6
RoutedEventArgs$$7 F
e$$G H
)$$H I
{%% 	
calbackpapa&& 
=&& 
(&& 
DataContext&& &
as&&' )
GameViewModelM&&* 8
)&&8 9
.&&9 :

calbacpapa&&: D
;&&D E
calbackpapa'' 
.'' 
userDidCard'' #
+=''$ &
(''' (
sender1''( /
,''/ 0
cardFlipped''1 <
)''< =
=>''> @
{(( 

Dispatcher)) 
.)) 
Invoke)) !
())! "
())" #
)))# $
=>))% '
MostrarCartas))( 5
())5 6
cardFlipped))6 A
)))A B
)))B C
;))C D
}** 
;** 
calbackpapa.. 
... 
cambioDeTurno.. %
+=..& (
(..) *
sender1..* 1
,..1 2
Turn..3 7
)..7 8
=>..9 ;
{// 

Dispatcher00 
.00 
Invoke00 !
(00! "
(00" #
)00# $
=>00% '
CambiarTurno00( 4
(004 5
Turn005 9
)009 :
)00: ;
;00; <
}11 
;11 
}55 	
private99 
void99 
PlayAgain_c99  
(99  !
Object99! '
sender99( .
,99. /
RoutedEventArgs990 ?
e99@ A
)99A B
{:: 	
var;; 
	miventana;; 
=;; 
Window;; "
.;;" #
	GetWindow;;# ,
(;;, -
this;;- 1
);;1 2
;;;2 3
	miventana<< 
.<< 
Close<< 
(<< 
)<< 
;<< 
}>> 	
private@@ 
void@@ 
Click_Carta1@@ !
(@@! "
object@@" (
sender@@) /
,@@/ 0
RoutedEventArgs@@1 @
e@@A B
)@@B C
{AA 	
intBB 
idBB 
=BB 
$numBB 
;BB 
HacerMovimientoEE 
(EE 
idEE 
,EE 
calbackpapaEE *
)EE* +
;EE+ ,
}FF 	
privateHH 
voidHH 
Clic_carta2HH  
(HH  !
objectHH! '
senderHH( .
,HH. /
RoutedEventArgsHH0 ?
eHH@ A
)HHA B
{II 	
intJJ 
idJJ 
=JJ 
$numJJ 
;JJ 
HacerMovimientoKK 
(KK 
idKK 
,KK 
calbackpapaKK  +
)KK+ ,
;KK, -
}LL 	
privateNN 
voidNN 
Clic_Carta3NN  
(NN  !
objectNN! '
senderNN( .
,NN. /
RoutedEventArgsNN0 ?
eNN@ A
)NNA B
{OO 	
intPP 
idPP 
=PP 
$numPP 
;PP 
HacerMovimientoQQ 
(QQ 
idQQ 
,QQ 
calbackpapaQQ  +
)QQ+ ,
;QQ, -
}RR 	
privateTT 
voidTT 
clic_carta4TT  
(TT  !
objectTT! '
senderTT( .
,TT. /
RoutedEventArgsTT0 ?
eTT@ A
)TTA B
{UU 	
intVV 
idVV 
=VV 
$numVV 
;VV 
HacerMovimientoWW 
(WW 
idWW 
,WW 
calbackpapaWW  +
)WW+ ,
;WW, -
}XX 	
privateZZ 
voidZZ 
clic_carta5ZZ  
(ZZ  !
objectZZ! '
senderZZ( .
,ZZ. /
RoutedEventArgsZZ0 ?
eZZ@ A
)ZZA B
{[[ 	
int\\ 
id\\ 
=\\ 
$num\\ 
;\\ 
HacerMovimiento]] 
(]] 
id]] 
,]] 
calbackpapa]]  +
)]]+ ,
;]], -
}^^ 	
private`` 
void`` 
clic_Carta6``  
(``  !
object``! '
sender``( .
,``. /
RoutedEventArgs``0 ?
e``@ A
)``A B
{aa 	
intbb 
idbb 
=bb 
$numbb 
;bb 
HacerMovimientocc 
(cc 
idcc 
,cc 
calbackpapacc  +
)cc+ ,
;cc, -
}dd 	
privateff 
voidff 
clic_Carta7ff  
(ff  !
objectff! '
senderff( .
,ff. /
RoutedEventArgsff0 ?
eff@ A
)ffA B
{gg 	
inthh 
idhh 
=hh 
$numhh 
;hh 
HacerMovimientoii 
(ii 
idii 
,ii 
calbackpapaii  +
)ii+ ,
;ii, -
}jj 	
privatell 
voidll 
Clic_Carta8ll  
(ll  !
objectll! '
senderll( .
,ll. /
RoutedEventArgsll0 ?
ell@ A
)llA B
{mm 	
intnn 
idnn 
=nn 
$numnn 
;nn 
HacerMovimientooo 
(oo 
idoo 
,oo 
calbackpapaoo  +
)oo+ ,
;oo, -
}pp 	
privaterr 
voidrr 
Clic_Carta9rr  
(rr  !
objectrr! '
senderrr( .
,rr. /
RoutedEventArgsrr0 ?
err@ A
)rrA B
{ss 	
inttt 
idtt 
=tt 
$numtt 
;tt 
HacerMovimientouu 
(uu 
iduu 
,uu 
calbackpapauu  +
)uu+ ,
;uu, -
}vv 	
privatexx 
voidxx 
Clic_Carta10xx !
(xx! "
objectxx" (
senderxx) /
,xx/ 0
RoutedEventArgsxx1 @
exxA B
)xxB C
{yy 	
intzz 
idzz 
=zz 
$numzz 
;zz 
HacerMovimiento{{ 
({{ 
id{{ 
,{{ 
calbackpapa{{  +
){{+ ,
;{{, -
}|| 	
private~~ 
void~~ 
Clic_Carta11~~ !
(~~! "
object~~" (
sender~~) /
,~~/ 0
RoutedEventArgs~~1 @
e~~A B
)~~B C
{ 	
int
ÄÄ 
id
ÄÄ 
=
ÄÄ 
$num
ÄÄ 
;
ÄÄ 
HacerMovimiento
ÅÅ 
(
ÅÅ 
id
ÅÅ 
,
ÅÅ 
calbackpapa
ÅÅ  +
)
ÅÅ+ ,
;
ÅÅ, -
}
ÇÇ 	
private
ÑÑ 
void
ÑÑ 
Click_Carta12
ÑÑ "
(
ÑÑ" #
object
ÑÑ# )
sender
ÑÑ* 0
,
ÑÑ0 1
RoutedEventArgs
ÑÑ2 A
e
ÑÑB C
)
ÑÑC D
{
ÖÖ 	
int
ÜÜ 
id
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
HacerMovimiento
áá 
(
áá 
id
áá 
,
áá 
calbackpapa
áá  +
)
áá+ ,
;
áá, -
}
àà 	
public
ää 
void
ää 
CambiarTurno
ää  
(
ää  !
bool
ää! %
turno
ää& +
)
ää+ ,
{
ãã 	
(
åå 
DataContext
åå 
as
åå 
GameViewModelM
åå +
)
åå+ ,
.
åå, -
turno
åå- 2
=
åå2 3
turno
åå3 8
;
åå8 9
this
éé 
.
éé 
turnoCliente
éé 
=
éé 
turno
éé  %
;
éé% &
if
êê 
(
êê 
!
êê 
turnoCliente
êê 
)
êê 
{
ëë 
carta1
ìì 
.
ìì 
	IsEnabled
ìì  
=
ìì! "
false
ìì# (
;
ìì( )
carta2
îî 
.
îî 
	IsEnabled
îî  
=
îî! "
false
îî# (
;
îî( )
carta3
ïï 
.
ïï 
	IsEnabled
ïï  
=
ïï! "
false
ïï# (
;
ïï( )
carta4
ññ 
.
ññ 
	IsEnabled
ññ  
=
ññ! "
false
ññ# (
;
ññ( )
carta5
óó 
.
óó 
	IsEnabled
óó  
=
óó! "
false
óó# (
;
óó( )
carta6
òò 
.
òò 
	IsEnabled
òò  
=
òò! "
false
òò# (
;
òò( )
carta7
ôô 
.
ôô 
	IsEnabled
ôô  
=
ôô! "
false
ôô# (
;
ôô( )
carta8
öö 
.
öö 
	IsEnabled
öö  
=
öö! "
false
öö# (
;
öö( )
carta9
õõ 
.
õõ 
	IsEnabled
õõ  
=
õõ! "
false
õõ# (
;
õõ( )
carta10
úú 
.
úú 
	IsEnabled
úú !
=
úú" #
false
úú$ )
;
úú) *
carta11
ùù 
.
ùù 
	IsEnabled
ùù !
=
ùù" #
false
ùù$ )
;
ùù) *
carta12
ûû 
.
ûû 
	IsEnabled
ûû !
=
ûû" #
false
ûû$ )
;
ûû) *
}
†† 
else
°° 
{
¢¢ 
carta1
§§ 
.
§§ 
	IsEnabled
§§  
=
§§! "
true
§§# '
;
§§' (
carta2
•• 
.
•• 
	IsEnabled
••  
=
••! "
true
••# '
;
••' (
carta3
¶¶ 
.
¶¶ 
	IsEnabled
¶¶  
=
¶¶! "
true
¶¶# '
;
¶¶' (
carta4
ßß 
.
ßß 
	IsEnabled
ßß  
=
ßß! "
true
ßß# '
;
ßß' (
carta5
®® 
.
®® 
	IsEnabled
®®  
=
®®! "
true
®®# '
;
®®' (
carta6
©© 
.
©© 
	IsEnabled
©©  
=
©©! "
true
©©# '
;
©©' (
carta7
™™ 
.
™™ 
	IsEnabled
™™  
=
™™! "
true
™™# '
;
™™' (
carta8
´´ 
.
´´ 
	IsEnabled
´´  
=
´´! "
true
´´# '
;
´´' (
carta9
¨¨ 
.
¨¨ 
	IsEnabled
¨¨  
=
¨¨! "
true
¨¨# '
;
¨¨' (
carta10
≠≠ 
.
≠≠ 
	IsEnabled
≠≠ !
=
≠≠" #
true
≠≠$ (
;
≠≠( )
carta11
ÆÆ 
.
ÆÆ 
	IsEnabled
ÆÆ !
=
ÆÆ" #
true
ÆÆ$ (
;
ÆÆ( )
carta12
ØØ 
.
ØØ 
	IsEnabled
ØØ !
=
ØØ" #
true
ØØ$ (
;
ØØ( )
}
±± 
}
¥¥ 	
public
∑∑ 
void
∑∑ 
MostrarCartas
∑∑ !
(
∑∑! "
int
∑∑" %
carta
∑∑& +
)
∑∑+ ,
{
∏∏ 	
if
∫∫ 
(
∫∫ 
carta
∫∫ 
==
∫∫ 
$num
∫∫ 
)
∫∫ 
{
ªª 
var
ºº 
game
ºº 
=
ºº 
DataContext
ºº &
as
ºº' )
GameViewModelM
ºº* 8
;
ºº8 9
game
ΩΩ 
.
ΩΩ 
ClickedSlide
ΩΩ !
(
ΩΩ! "
carta1
ΩΩ" (
.
ΩΩ( )
DataContext
ΩΩ) 4
)
ΩΩ4 5
;
ΩΩ5 6
}
¿¿ 
else
¡¡ 
if
¡¡ 
(
¡¡ 
carta
¡¡ 
==
¡¡ 
$num
¡¡ 
)
¡¡  
{
¬¬ 
var
ƒƒ 
game
ƒƒ 
=
ƒƒ 
DataContext
ƒƒ &
as
ƒƒ' )
GameViewModelM
ƒƒ* 8
;
ƒƒ8 9
game
≈≈ 
.
≈≈ 
ClickedSlide
≈≈ !
(
≈≈! "
carta2
≈≈" (
.
≈≈( )
DataContext
≈≈) 4
)
≈≈4 5
;
≈≈5 6
}
∆∆ 
else
«« 
if
«« 
(
«« 
carta
«« 
==
«« 
$num
«« 
)
««  
{
»» 
var
   
game
   
=
   
DataContext
   &
as
  ' )
GameViewModelM
  * 8
;
  8 9
game
ÀÀ 
.
ÀÀ 
ClickedSlide
ÀÀ !
(
ÀÀ! "
carta3
ÀÀ" (
.
ÀÀ( )
DataContext
ÀÀ) 4
)
ÀÀ4 5
;
ÀÀ5 6
}
ÃÃ 
else
ÕÕ 
if
ÕÕ 
(
ÕÕ 
carta
ÕÕ 
==
ÕÕ 
$num
ÕÕ 
)
ÕÕ  
{
ŒŒ 
var
–– 
game
–– 
=
–– 
DataContext
–– &
as
––' )
GameViewModelM
––* 8
;
––8 9
game
—— 
.
—— 
ClickedSlide
—— !
(
——! "
carta4
——" (
.
——( )
DataContext
——) 4
)
——4 5
;
——5 6
}
““ 
else
”” 
if
”” 
(
”” 
carta
”” 
==
”” 
$num
”” 
)
””  
{
‘‘ 
var
’’ 
game
’’ 
=
’’ 
DataContext
’’ &
as
’’' )
GameViewModelM
’’* 8
;
’’8 9
game
÷÷ 
.
÷÷ 
ClickedSlide
÷÷ !
(
÷÷! "
carta5
÷÷" (
.
÷÷( )
DataContext
÷÷) 4
)
÷÷4 5
;
÷÷5 6
}
ÿÿ 
else
ŸŸ 
if
ŸŸ 
(
ŸŸ 
carta
ŸŸ 
==
ŸŸ 
$num
ŸŸ 
)
ŸŸ  
{
⁄⁄ 
var
‹‹ 
game
‹‹ 
=
‹‹ 
DataContext
‹‹ &
as
‹‹' )
GameViewModelM
‹‹* 8
;
‹‹8 9
game
›› 
.
›› 
ClickedSlide
›› !
(
››! "
carta6
››" (
.
››( )
DataContext
››) 4
)
››4 5
;
››5 6
}
ﬁﬁ 
else
ﬂﬂ 
if
ﬂﬂ 
(
ﬂﬂ 
carta
ﬂﬂ 
==
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ  
{
‡‡ 
var
‚‚ 
game
‚‚ 
=
‚‚ 
DataContext
‚‚ &
as
‚‚' )
GameViewModelM
‚‚* 8
;
‚‚8 9
game
„„ 
.
„„ 
ClickedSlide
„„ !
(
„„! "
carta7
„„" (
.
„„( )
DataContext
„„) 4
)
„„4 5
;
„„5 6
}
‰‰ 
else
ÂÂ 
if
ÂÂ 
(
ÂÂ 
carta
ÂÂ 
==
ÂÂ 
$num
ÂÂ 
)
ÂÂ  
{
ÊÊ 
var
ÁÁ 
game
ÁÁ 
=
ÁÁ 
DataContext
ÁÁ &
as
ÁÁ' )
GameViewModelM
ÁÁ* 8
;
ÁÁ8 9
game
ËË 
.
ËË 
ClickedSlide
ËË !
(
ËË! "
carta8
ËË" (
.
ËË( )
DataContext
ËË) 4
)
ËË4 5
;
ËË5 6
}
ÍÍ 
else
ÎÎ 
if
ÎÎ 
(
ÎÎ 
carta
ÎÎ 
==
ÎÎ 
$num
ÎÎ 
)
ÎÎ  
{
ÏÏ 
var
ÌÌ 
game
ÌÌ 
=
ÌÌ 
DataContext
ÌÌ &
as
ÌÌ' )
GameViewModelM
ÌÌ* 8
;
ÌÌ8 9
game
ÓÓ 
.
ÓÓ 
ClickedSlide
ÓÓ !
(
ÓÓ! "
carta9
ÓÓ" (
.
ÓÓ( )
DataContext
ÓÓ) 4
)
ÓÓ4 5
;
ÓÓ5 6
}
 
else
ÒÒ 
if
ÒÒ 
(
ÒÒ 
carta
ÒÒ 
==
ÒÒ 
$num
ÒÒ  
)
ÒÒ  !
{
ÚÚ 
var
ÛÛ 
game
ÛÛ 
=
ÛÛ 
DataContext
ÛÛ &
as
ÛÛ' )
GameViewModelM
ÛÛ* 8
;
ÛÛ8 9
game
ÙÙ 
.
ÙÙ 
ClickedSlide
ÙÙ !
(
ÙÙ! "
carta10
ÙÙ" )
.
ÙÙ) *
DataContext
ÙÙ* 5
)
ÙÙ5 6
;
ÙÙ6 7
}
ˆˆ 
else
˜˜ 
if
˜˜ 
(
˜˜ 
carta
˜˜ 
==
˜˜ 
$num
˜˜  
)
˜˜  !
{
¯¯ 
var
˘˘ 
game
˘˘ 
=
˘˘ 
DataContext
˘˘ &
as
˘˘' )
GameViewModelM
˘˘* 8
;
˘˘8 9
game
˙˙ 
.
˙˙ 
ClickedSlide
˙˙ !
(
˙˙! "
carta11
˙˙" )
.
˙˙) *
DataContext
˙˙* 5
)
˙˙5 6
;
˙˙6 7
}
¸¸ 
else
˝˝ 
if
˝˝ 
(
˝˝ 
carta
˝˝ 
==
˝˝ 
$num
˝˝  
)
˝˝  !
{
˛˛ 
var
ˇˇ 
game
ˇˇ 
=
ˇˇ 
DataContext
ˇˇ &
as
ˇˇ' )
GameViewModelM
ˇˇ* 8
;
ˇˇ8 9
game
ÄÄ 
.
ÄÄ 
ClickedSlide
ÄÄ !
(
ÄÄ! "
carta12
ÄÄ" )
.
ÄÄ) *
DataContext
ÄÄ* 5
)
ÄÄ5 6
;
ÄÄ6 7
}
ÇÇ 
else
ÉÉ 
{
ÑÑ 

MessageBox
ÖÖ 
.
ÖÖ 
Show
ÖÖ 
(
ÖÖ  
$str
ÖÖ  G
)
ÖÖG H
;
ÖÖH I
}
ÜÜ 
}
ää 	
}
ãã 
}åå Ò
VC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Lobby.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public 

partial 
class 
Lobby 
:  
Window! '
{ 
public 
ServiciosCallBack  
callBack! )
;) *
public 
Lobby 
( 
ServiciosCallBack &
callBack' /
)/ 0
{ 	
this 
. 
callBack 
= 
callBack $
;$ %
InitializeComponent 
(  
)  !
;! "
} 	
private 
void 
btnSalir_Click #
(# $
object$ *
sender+ 1
,1 2
RoutedEventArgs3 B
eC D
)D E
{ 	

SalirLobby 
( 
Memorama_Client &
.& '

Properties' 1
.1 2
Settings2 :
.: ;
Default; B
.B C
UsuarioOnlineC P
)P Q
;Q R
this 
. 
Close 
( 
) 
; 
} 	
private 
void 
btnIniciar_Click %
(% &
object& ,
sender- 3
,3 4
RoutedEventArgs5 D
eE F
)F G
{ 	
EmpezarJuego   
(   
callBack   "
)  " #
;  # $
}!! 	
private## 
void## 
btnReportar_Click## &
(##& '
object##' -
sender##. 4
,##4 5
RoutedEventArgs##6 E
e##F G
)##G H
{$$ 	
if%% 
(%% "
ListUsuariosConectados%% &
.%%& '
SelectedIndex%%' 4
>%%5 6
-%%7 8
$num%%8 9
)%%9 :
{&& 
if'' 
('' "
ListUsuariosConectados'' *
.''* +
SelectedValue''+ 8
.''8 9
ToString''9 A
(''A B
)''B C
.''C D
Equals''D J
(''J K
Memorama_Client''K Z
.''Z [

Properties''[ e
.''e f
Settings''f n
.''n o
Default''o v
.''v w
UsuarioOnline	''w Ñ
)
''Ñ Ö
)
''Ö Ü
{(( 

MessageBox)) 
.)) 
Show)) #
())# $
$str))$ F
)))F G
;))G H
}** 
else++ 
{,, 
BanearJugador.. !
(..! ""
ListUsuariosConectados.." 8
...8 9
SelectedValue..9 F
...F G
ToString..G O
(..O P
)..P Q
)..Q R
;..R S
}00 
}33 
else44 

MessageBox44 
.44 
Show44  
(44  !
$str44! L
)44L M
;44M N
}55 	
}66 
}77 î;
VC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Login.xaml.cs
	namespace 	
Memorama_Client
 
{		 
public 

partial 
class 

MainWindow #
:$ %
Window& ,
{ 
public 

MainWindow 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
; 
if 
( 

txtUsuario 
. 
Text 
==  "
string# )
.) *
Empty* /
||0 2
passBox3 :
.: ;
Password; C
==D F
stringG M
.M N
EmptyN S
)S T
{   
check!! 
=!! 
ChecResults!! #
.!!# $
Failed!!$ *
;!!* +
}"" 
else## 
{$$ 
check%% 
=%% 
ChecResults%% #
.%%# $
Passed%%$ *
;%%* +
}&& 
return'' 
check'' 
;'' 
}(( 	
private** 
ChecResults** 
CheckFields** '
(**' (
)**( )
{++ 	
ChecResults,, 
check,, 
=,, 
ChecResults,,  +
.,,+ ,
Failed,,, 2
;,,2 3
ValidarCampos-- 
validarCampos-- '
=--( )
new--* -
ValidarCampos--. ;
(--; <
)--< =
;--= >
if.. 
(.. 
CheckEmptyFields..  
(..  !
)..! "
==..# %
ChecResults..& 1
...1 2
Failed..2 8
)..8 9
{// 

MessageBox00 
.00 
Show00 
(00  
$str00  ;
)00; <
;00< =
check11 
=11 
ChecResults11 #
.11# $
Failed11$ *
;11* +
}22 
else33 
if33 
(33 
validarCampos33 "
.33" #
ValidarContrase√±a33# 4
(334 5
passBox335 <
.33< =
Password33= E
)33E F
==33G I
ValidarCampos33J W
.33W X 
ResultadosValidacion33X l
.33l m
Contrase√±aInvalida33m 
)	33 Ä
{44 

MessageBox55 
.55 
Show55 
(55  
$str55  x
)55x y
;55y z
}66 
else77 
if77 
(77 
validarCampos77 "
.77" #
ValidarUsuario77# 1
(771 2

txtUsuario772 <
.77< =
Text77= A
)77A B
==77C E
ValidarCampos77F S
.77S T 
ResultadosValidacion77T h
.77h i
UsuarioInvalido77i x
)77x y
{88 

MessageBox99 
.99 
Show99 
(99  
$str99  E
)99E F
;99F G
}:: 
else;; 
{<< 
check== 
=== 
ChecResults== #
.==# $
Passed==$ *
;==* +
}>> 
return?? 
check?? 
;?? 
}@@ 	
privateBB 
voidBB 
btnIngresar_ClickBB &
(BB& '
objectBB' -
senderBB. 4
,BB4 5
RoutedEventArgsBB6 E
eBBF G
)BBG H
{CC 	
ifFF 
(FF 
CheckFieldsFF 
(FF 
)FF 
==FF  
ChecResultsFF! ,
.FF, -
PassedFF- 3
)FF3 4
{GG 
StringII 
dataII 
=II 
PassHashII &
(II& '
passBoxII' .
.II. /
PasswordII/ 7
)II7 8
;II8 9
Memorama_ClientKK 
.KK  

PropertiesKK  *
.KK* +
SettingsKK+ 3
.KK3 4
DefaultKK4 ;
.KK; <
UsuarioOnlineKK< I
=KKJ K

txtUsuarioKKL V
.KKV W
TextKKW [
;KK[ \
	ServiciosLL 
.LL 
IniciarSesionLL '
(LL' (
newLL( +
ServidorMemoramaLL, <
.LL< =
UsuarioLL= D
{MM 
NicknameNN 
=NN 

txtUsuarioNN )
.NN) *
TextNN* .
,NN. /
PasswordOO 
=OO 
dataOO #
}PP 
)PP 
;PP 
}TT 
}ZZ 	
private\\ 
void\\ %
btnRegistrarUsuario_Click\\ .
(\\. /
object\\/ 5
sender\\6 <
,\\< =
RoutedEventArgs\\> M
e\\N O
)\\O P
{]] 	
RegistrarUsuario^^ 
registrarusuario^^ -
=^^. /
new^^0 3
RegistrarUsuario^^4 D
(^^D E
)^^E F
;^^F G
registrarusuario__ 
.__ 
Show__ !
(__! "
)__" #
;__# $
this`` 
.`` 
Close`` 
(`` 
)`` 
;`` 
}bb 	
publicff 
staticff 
Stringff 
PassHashff %
(ff% &
Stringff& ,
dataff- 1
)ff1 2
{gg 	
SHA1hh 
shahh 
=hh 
SHA1hh 
.hh 
Createhh "
(hh" #
)hh# $
;hh$ %
byteii 
[ii 
]ii 
hashDataii 
=ii 
shaii !
.ii! "
ComputeHashii" -
(ii- .
Encodingii. 6
.ii6 7
Defaultii7 >
.ii> ?
GetBytesii? G
(iiG H
dataiiH L
)iiL M
)iiM N
;iiN O
StringBuilderjj 
stringBuilderValuejj ,
=jj- .
newjj/ 2
StringBuilderjj3 @
(jj@ A
)jjA B
;jjB C
forll 
(ll 
intll 
ill 
=ll 
$numll 
;ll 
ill 
<ll 
hashDatall  (
.ll( )
Lengthll) /
;ll/ 0
ill1 2
++ll2 4
)ll4 5
{mm 
stringBuilderValuenn "
.nn" #
Appendnn# )
(nn) *
hashDatann* 2
[nn2 3
inn3 4
]nn4 5
.nn5 6
ToStringnn6 >
(nn> ?
)nn? @
)nn@ A
;nnA B
}oo 
returnpp 
stringBuilderValuepp %
.pp% &
ToStringpp& .
(pp. /
)pp/ 0
;pp0 1
}qq 	
privateuu 
voiduu  
btnContrase√±a_Clickuu (
(uu( )
objectuu) /
senderuu0 6
,uu6 7
RoutedEventArgsuu8 G
euuH I
)uuI J
{vv 	!
BuscarParaContrase√±aww  
ventanaww! (
=ww) *
newww+ .!
BuscarParaContrase√±aww/ C
(wwC D
)wwD E
;wwE F
ventanaxx 
.xx 
Showxx 
(xx 
)xx 
;xx 
thisyy 
.yy 
Closeyy 
(yy 
)yy 
;yy 
}zz 	
}{{ 
}|| ´
^C:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\MenuPrincipal.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public 

partial 
class 
MenuPrincipal &
:' (
Window) /
{ 
public 
MenuPrincipal 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void !
btnMultijugador_Click *
(* +
object+ 1
sender2 8
,8 9
RoutedEventArgs: I
eJ K
)K L
{ 	
ServidorMemorama 
. 
Usuario $
usuario% ,
=- .
new/ 2
ServidorMemorama3 C
.C D
UsuarioD K
(K L
)L M
;M N
usuario 
. 
Nickname 
= 
Memorama_Client .
.. /

Properties/ 9
.9 :
Settings: B
.B C
DefaultC J
.J K
UsuarioOnlineK X
;X Y
var 
callback 
= 
new 
ServiciosCallBack 0
(0 1
)1 2
;2 3
callback 
. 
calbackpapa  
=! "
callback# +
;+ ,
	Servicios 
. 
AgregarUsuarios %
(% &
usuario& -
,- .
callback. 6
)6 7
;7 8
} 	
private 
void 
btnRainking_Click &
(& '
object' -
sender. 4
,4 5
RoutedEventArgs6 E
eF G
)G H
{ 	
	Servicios 
. 
RaikingUsuarios %
(% &
)& '
;' (
}   	
private"" 
void"" 
btnModoSolo_Click"" &
(""& '
object""' -
sender"". 4
,""4 5
RoutedEventArgs""6 E
e""F G
)""G H
{## 	
Juego$$ 
juego$$ 
=$$ 
new$$ 
Juego$$ #
($$# $
)$$$ %
;$$% &
juego%% 
.%% 
Show%% 
(%% 
)%% 
;%% 
}(( 	
}++ 
},, π4
aC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\NuevaContrase√±a.xaml.cs
	namespace 	
Memorama_Client
 
{		 
public 

partial 
class 
NuevaContrase√±a (
:) *
Window+ 1
{ 
string 
usuario 
; 
public 
NuevaContrase√±a 
( 
string %
usuario& -
)- .
{ 	
InitializeComponent 
(  
)  !
;! "
this 
. 
usuario 
= 
usuario "
;" #
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
; 
if 
( 
passContrase√±a 
. 
Password '
==( *
string+ 1
.1 2
Empty2 7
||8 :!
passContrase√±aRepite; O
.O P
PasswordP X
==X Z
stringZ `
.` a
Emptya f
)f g
{ 
check 
= 
ChecResults #
.# $
Failed$ *
;* +
} 
else   
{!! 
check"" 
="" 
ChecResults"" #
.""# $
Passed""$ *
;""* +
}## 
return$$ 
check$$ 
;$$ 
}%% 	
private'' 
ChecResults'' 
CheckFields'' '
(''' (
)''( )
{(( 	
ChecResults)) 
check)) 
=)) 
ChecResults))  +
.))+ ,
Failed)), 2
;))2 3
Validaciones** 
.** 
ValidarCampos** &
validarCampos**' 4
=**5 6
new**7 :
Validaciones**; G
.**G H
ValidarCampos**H U
(**U V
)**V W
;**W X
if++ 
(++ 
CheckEmptyFields++  
(++  !
)++! "
==++# %
ChecResults++& 1
.++1 2
Failed++2 8
)++8 9
{,, 

MessageBox-- 
.-- 
Show-- 
(--  
$str--  ;
)--; <
;--< =
check.. 
=.. 
ChecResults.. #
...# $
Failed..$ *
;..* +
}// 
else00 
if00 
(00 
validarCampos00 "
.00" #
ValidarContrase√±a00# 4
(004 5
passContrase√±a005 C
.00C D
Password00D L
)00L M
==00N P
Validaciones00Q ]
.00] ^
ValidarCampos00^ k
.00k l!
ResultadosValidacion	00l Ä
.
00Ä Å!
Contrase√±aInvalida
00Å ì
)
00ì î
{11 

MessageBox22 
.22 
Show22 
(22  
$str22  x
)22x y
;22y z
}33 
else44 
if44 
(44 
validarCampos44 "
.44" #
ValidarContrase√±a44# 4
(444 5!
passContrase√±aRepite445 I
.44I J
Password44J R
)44R S
==44T V
Validaciones44W c
.44c d
ValidarCampos44d q
.44q r!
ResultadosValidacion	44r Ü
.
44Ü á!
Contrase√±aInvalida
44á ô
)
44ô ö
{55 

MessageBox66 
.66 
Show66 
(66  
$str66  x
)66x y
;66y z
}77 
else99 
{:: 
check;; 
=;; 
ChecResults;; #
.;;# $
Passed;;$ *
;;;* +
}<< 
return== 
check== 
;== 
}>> 	
privateAA 
voidAA '
btnCambiarContrase√±a_ClickAA /
(AA/ 0
objectAA0 6
senderAA7 =
,AA= >
RoutedEventArgsAA? N
eAAO P
)AAP Q
{BB 	
ifCC 
(CC 
passContrase√±aCC 
.CC 
PasswordCC '
==CC( *!
passContrase√±aRepiteCC+ ?
.CC? @
PasswordCC@ H
)CCH I
{DD 
ifEE 
(EE 
CheckFieldsEE 
(EE  
)EE  !
==EE" $
ChecResultsEE% 0
.EE0 1
PassedEE1 7
)EE7 8
{FF 
stringGG 
dataGG 
=GG  !
PassHashGG" *
(GG* +
passContrase√±aGG+ 9
.GG9 :
PasswordGG: B
)GGB C
;GGC D
CambiarContrase√±aHH %
(HH% &
usuarioHH& -
,HH- .
dataHH/ 3
)HH3 4
;HH4 5
}II 
}KK 
elseLL 
{LL 

MessageBoxNN 
.NN 
ShowNN 
(NN  
$strNN  @
)NN@ A
;NNA B
}OO 
}QQ 	
publicTT 
staticTT 
StringTT 
PassHashTT %
(TT% &
StringTT& ,
dataTT- 1
)TT1 2
{UU 	
SHA1VV 
shaVV 
=VV 
SHA1VV 
.VV 
CreateVV "
(VV" #
)VV# $
;VV$ %
byteWW 
[WW 
]WW 
hashDataWW 
=WW 
shaWW !
.WW! "
ComputeHashWW" -
(WW- .
EncodingWW. 6
.WW6 7
DefaultWW7 >
.WW> ?
GetBytesWW? G
(WWG H
dataWWH L
)WWL M
)WWM N
;WWN O
StringBuilderXX 
stringBuilderValueXX ,
=XX- .
newXX/ 2
StringBuilderXX3 @
(XX@ A
)XXA B
;XXB C
forZZ 
(ZZ 
intZZ 
iZZ 
=ZZ 
$numZZ 
;ZZ 
iZZ 
<ZZ 
hashDataZZ  (
.ZZ( )
LengthZZ) /
;ZZ/ 0
iZZ1 2
++ZZ2 4
)ZZ4 5
{[[ 
stringBuilderValue\\ "
.\\" #
Append\\# )
(\\) *
hashData\\* 2
[\\2 3
i\\3 4
]\\4 5
.\\5 6
ToString\\6 >
(\\> ?
)\\? @
)\\@ A
;\\A B
}]] 
return^^ 
stringBuilderValue^^ %
.^^% &
ToString^^& .
(^^. /
)^^/ 0
;^^0 1
}__ 	
}aa 
}bb Ó
YC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Rainking.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public 

partial 
class 
Rainking !
:" #
Window$ *
{		 
public

 
Rainking

 
(

 
)

 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
} 
} ˚
^C:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\RecibirCodigo.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public		 

partial		 
class		 
RecibirCodigo		 &
:		' (
Window		) /
{

 
string 
usuario 
; 
public 
RecibirCodigo 
( 
string #
usuario$ +
)+ ,
{ 	
InitializeComponent 
(  
)  !
;! "
this 
. 
usuario 
= 
usuario "
;" #
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
= 
ChecResults  +
.+ ,
Failed, 2
;2 3
if 
( 
	txtCodigo 
. 
Text 
== !
string" (
.( )
Empty) .
). /
{ 
check 
= 
ChecResults #
.# $
Failed$ *
;* +
} 
else 
{ 
check   
=   
ChecResults   #
.  # $
Passed  $ *
;  * +
}!! 
return"" 
check"" 
;"" 
}## 	
private%% 
ChecResults%% 
CheckFields%% '
(%%' (
)%%( )
{&& 	
ChecResults'' 
check'' 
='' 
ChecResults''  +
.''+ ,
Failed'', 2
;''2 3
Validaciones(( 
.(( 
ValidarCampos(( &
validarCampos((' 4
=((5 6
new((7 :
Validaciones((; G
.((G H
ValidarCampos((H U
(((U V
)((V W
;((W X
if)) 
()) 
CheckEmptyFields))  
())  !
)))! "
==))# %
ChecResults))& 1
.))1 2
Failed))2 8
)))8 9
{** 

MessageBox++ 
.++ 
Show++ 
(++  
$str++  ;
)++; <
;++< =
check,, 
=,, 
ChecResults,, #
.,,# $
Failed,,$ *
;,,* +
}-- 
else.. 
if.. 
(.. 
validarCampos.. "
..." #
ValidarN√∫mero..# 0
(..0 1
	txtCodigo..1 :
...: ;
Text..; ?
)..? @
==..A C
Validaciones..D P
...P Q
ValidarCampos..Q ^
...^ _ 
ResultadosValidacion.._ s
...s t
N√∫meroInv√°lido	..t Ç
)
..Ç É
{// 

MessageBox00 
.00 
Show00 
(00  
$str00  Z
)00Z [
;00[ \
}11 
else44 
{55 
check66 
=66 
ChecResults66 #
.66# $
Passed66$ *
;66* +
}77 
return88 
check88 
;88 
}99 	
private<< 
void<< !
btnenviarCodigo_Click<< *
(<<* +
object<<+ 1
sender<<2 8
,<<8 9
RoutedEventArgs<<: I
e<<J K
)<<K L
{== 	
if>> 
(>> 
CheckFields>> 
(>> 
)>> 
==>>  
ChecResults>>! ,
.>>, -
Passed>>- 3
)>>3 4
{?? 
EnviarCodigo@@ 
(@@ 
usuario@@ $
,@@$ %
	txtCodigo@@& /
.@@/ 0
Text@@0 4
)@@4 5
;@@5 6
}AA 
}BB 	
}CC 
}DD üB
aC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\RegistrarUsuario.xaml.cs
	namespace 	
Memorama_Client
 
{		 
public 

partial 
class 
RegistrarUsuario )
:* +
Window, 2
{ 
public 
RegistrarUsuario 
(  
)  !
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
; 
if 
( 
	txtCorreo 
. 
Text 
== !
String" (
.( )
Empty) .
||/ 1
txtUserName2 =
.= >
Text> B
==C E
StringF L
.L M
EmptyM R
||S U
PassPasswordV b
.b c
Passwordc k
==l n
Stringo u
.u v
Emptyv {
||| ~

PassRepite	 â
.
â ä
Password
ä í
==
ì ï
String
ñ ú
.
ú ù
Empty
ù ¢
)
¢ £
{ 
check 
= 
ChecResults #
.# $
Failed$ *
;* +
} 
else   
{!! 
check"" 
="" 
ChecResults"" #
.""# $
Passed""$ *
;""* +
}## 
return$$ 
check$$ 
;$$ 
}%% 	
private'' 
ChecResults'' 
CheckFields'' '
(''' (
)''( )
{(( 	
ChecResults)) 
check)) 
=)) 
ChecResults))  +
.))+ ,
Failed)), 2
;))2 3
ValidarCampos** 
validarCampos** '
=**( )
new*** -
ValidarCampos**. ;
(**; <
)**< =
;**= >
if++ 
(++ 
CheckEmptyFields++  
(++  !
)++! "
==++# %
ChecResults++& 1
.++1 2
Failed++2 8
)++8 9
{,, 

MessageBox-- 
.-- 
Show-- 
(--  
$str--  ;
)--; <
;--< =
check.. 
=.. 
ChecResults.. #
...# $
Failed..$ *
;..* +
}// 
else00 
if00 
(00 
validarCampos00 "
.00" #
ValidarContrase√±a00# 4
(004 5
PassPassword005 A
.00A B
Password00B J
)00J K
==00L N
ValidarCampos00O \
.00\ ] 
ResultadosValidacion00] q
.00q r 
Contrase√±aInvalida	00r Ñ
)
00Ñ Ö
{11 

MessageBox22 
.22 
Show22 
(22  
$str22  x
)22x y
;22y z
}33 
else44 
if44 
(44 
validarCampos44 "
.44" #
ValidarUsuario44# 1
(441 2
txtUserName442 =
.44= >
Text44> B
)44B C
==44D F
ValidarCampos44G T
.44T U 
ResultadosValidacion44U i
.44i j
UsuarioInvalido44j y
)44y z
{55 

MessageBox66 
.66 
Show66 
(66  
$str66  E
)66E F
;66F G
}77 
else88 
if88 
(88 
validarCampos88 "
.88" #
ValidarCorreo88# 0
(880 1
	txtCorreo881 :
.88: ;
Text88; ?
)88? @
==88A C
ValidarCampos88D Q
.88Q R 
ResultadosValidacion88R f
.88f g
CorreoInvalido88g u
)88u v
{99 

MessageBox:: 
.:: 
Show:: 
(::  
$str::  V
)::V W
;::W X
};; 
else<< 
{== 
check>> 
=>> 
ChecResults>> #
.>># $
Passed>>$ *
;>>* +
}?? 
return@@ 
check@@ 
;@@ 
}AA 	
privateEE 
voidEE 
btnRegistrar_ClickEE '
(EE' (
objectEE( .
senderEE/ 5
,EE5 6
RoutedEventArgsEE7 F
eEEG H
)EEH I
{FF 	
ifGG 
(GG 
PassPasswordGG 
.GG 
PasswordGG %
==GG& (

PassRepiteGG) 3
.GG3 4
PasswordGG4 <
)GG< =
{HH 
ifII 
(II 
CheckFieldsII 
(II  
)II  !
==II" $
ChecResultsII% 0
.II0 1
PassedII1 7
)II7 8
{JJ 
Memorama_ClientKK #
.KK# $

PropertiesKK$ .
.KK. /
SettingsKK/ 7
.KK7 8
DefaultKK8 ?
.KK? @
UsuarioOnlineKK@ M
=KKN O
txtUserNameKKP [
.KK[ \
TextKK\ `
;KK` a
UsuarioLL 
usuarioLL #
=LL$ %
newLL& )
UsuarioLL* 1
(LL1 2
)LL2 3
;LL3 4
usuarioMM 
.MM 
CorreoMM "
=MM# $
	txtCorreoMM% .
.MM. /
TextMM/ 3
;MM3 4
usuarioNN 
.NN 
NicknameNN $
=NN% &
txtUserNameNN' 2
.NN2 3
TextNN3 7
;NN7 8
usuarioOO 
.OO 
PasswordOO $
=OO% &
PassHashOO' /
(OO/ 0
PassPasswordOO0 <
.OO< =
PasswordOO= E
)OOE F
;OOG H
	ServiciosPP 
.PP 
RegistrarUsuarioPP .
(PP. /
usuarioPP/ 6
)PP6 7
;PP7 8
ValidarRegistroRR #
validarRegistroRR$ 3
=RR4 5
newRR6 9
ValidarRegistroRR: I
(RRI J
usuarioRRJ Q
)RRQ R
;RRR S
validarRegistroSS #
.SS# $
ShowSS$ (
(SS( )
)SS) *
;SS* +
thisTT 
.TT 
CloseTT 
(TT 
)TT  
;TT  !
}VV 
}WW 
elseXX 
{YY 

MessageBoxZZ 
.ZZ 
ShowZZ 
(ZZ  
$strZZ  >
)ZZ> ?
;ZZ? @
PassPassword[[ 
.[[ 
Password[[ %
=[[& '
String[[( .
.[[. /
Empty[[/ 4
;[[4 5

PassRepite\\ 
.\\ 
Password\\ #
=\\$ %
String\\& ,
.\\, -
Empty\\- 2
;\\2 3
}]] 
}^^ 	
public__ 
static__ 
String__ 
PassHash__ %
(__% &
String__& ,
data__- 1
)__1 2
{`` 	
SHA1aa 
shaaa 
=aa 
SHA1aa 
.aa 
Createaa "
(aa" #
)aa# $
;aa$ %
bytebb 
[bb 
]bb 
hashDatabb 
=bb 
shabb !
.bb! "
ComputeHashbb" -
(bb- .
Encodingbb. 6
.bb6 7
Defaultbb7 >
.bb> ?
GetBytesbb? G
(bbG H
databbH L
)bbL M
)bbM N
;bbN O
StringBuildercc 
stringBuilderValuecc ,
=cc- .
newcc/ 2
StringBuildercc3 @
(cc@ A
)ccA B
;ccB C
foree 
(ee 
intee 
iee 
=ee 
$numee 
;ee 
iee 
<ee 
hashDataee  (
.ee( )
Lengthee) /
;ee/ 0
iee1 2
++ee2 4
)ee4 5
{ff 
stringBuilderValuegg "
.gg" #
Appendgg# )
(gg) *
hashDatagg* 2
[gg2 3
igg3 4
]gg4 5
.gg5 6
ToStringgg6 >
(gg> ?
)gg? @
)gg@ A
;ggA B
}hh 
returnii 
stringBuilderValueii %
.ii% &
ToStringii& .
(ii. /
)ii/ 0
;ii0 1
}jj 	
}kk 
}ll “Ü
UC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Servicios.cs
	namespace 	
Memorama_Client
 
{ 
public

 

static

 
class

 
	Servicios

 !
{ 
public 
static 
void 
IniciarSesion (
(( )
Usuario) 0
usuario1 8
)8 9
{ 	
try 
{ 
ServiciosCallBack !
	servicios" +
=, -
new. 1
ServiciosCallBack2 C
(C D
)D E
;E F
InstanceContext 
instanceContext  /
=0 1
new2 5
InstanceContext6 E
(E F
	serviciosF O
)O P
;P Q
ServidorMemorama  
.  !
ContratosClient! 0
server1 7
=8 9
new: =
ServidorMemorama> N
.N O
ContratosClientO ^
(^ _
instanceContext_ n
)n o
;o p
server 
. 
Login 
( 
usuario $
)$ %
;% &
}   
catch   
(   %
EndpointNotFoundException   ,
)  , -
{!! 

MessageBox"" 
."" 
Show"" 
(""  
$str""  A
)""A B
;""B C
}## 
}%% 	
public&& 
static&& 
void&& 
RegistrarUsuario&& +
(&&+ ,
Usuario&&, 3
usuario&&4 ;
)&&; <
{'' 	
try(( 
{)) 
InstanceContext** 
instanceContext**  /
=**0 1
new**2 5
InstanceContext**6 E
(**E F
new**F I
ServiciosCallBack**J [
(**[ \
)**\ ]
)**] ^
;**^ _
ServidorMemorama++  
.++  !
ContratosClient++! 0
server++1 7
=++8 9
new++: =
ServidorMemorama++> N
.++N O
ContratosClient++O ^
(++^ _
instanceContext++_ n
)++n o
;++o p
server.. 
... 
RegistrarUsuario.. '
(..' (
usuario..( /
)../ 0
;..0 1
}// 
catch00 
(00 %
EndpointNotFoundException00 ,
)00, -
{11 

MessageBox44 
.44 
Show44 
(44  
$str44  A
)44A B
;44B C
}55 
}66 
public88 
static88 
void88 
ValidarRegistro88 *
(88* +
Usuario88+ 2
usuario883 :
,88: ;
string88< B
codigo88C I
)88I J
{99 	
try:: 
{;; 
InstanceContext<< 
instanceContext<<  /
=<<0 1
new<<2 5
InstanceContext<<6 E
(<<E F
new<<F I
ServiciosCallBack<<J [
(<<[ \
)<<\ ]
)<<] ^
;<<^ _
ServidorMemorama==  
.==  !
ContratosClient==! 0
server==1 7
===8 9
new==: =
ServidorMemorama==> N
.==N O
ContratosClient==O ^
(==^ _
instanceContext==_ n
)==n o
;==o p
server>> 
.>> 
ValidarRegistro>> &
(>>& '
usuario>>' .
,>>. /
codigo>>0 6
)>>6 7
;>>7 8
}?? 
catch@@ 
(@@ %
EndpointNotFoundException@@ ,
)@@, -
{AA 

MessageBoxDD 
.DD 
ShowDD 
(DD  
$strDD  A
)DDA B
;DDB C
}EE 
}FF 	
publicHH 
staticHH 
voidHH 
AgregarUsuariosHH *
(HH* +
UsuarioHH+ 2
usuarioHH3 :
,HH: ;
ServiciosCallBackHH; L
callbackHHM U
)HHU V
{II 	
tryJJ 
{KK 
InstanceContextLL 
instanceContextLL  /
=LL0 1
newLL2 5
InstanceContextLL6 E
(LLE F
callbackLLF N
)LLN O
;LLO P
ServidorMemoramaMM  
.MM  !
ContratosClientMM! 0
serverMM1 7
=MM8 9
newMM: =
ServidorMemoramaMM> N
.MMN O
ContratosClientMMO ^
(MM^ _
instanceContextMM_ n
)MMn o
;MMo p
serverOO 
.OO  
AgregarUsuariosLobbyOO +
(OO+ ,
usuarioOO, 3
)OO3 4
;OO4 5
}PP 
catchQQ 
(QQ %
EndpointNotFoundExceptionQQ ,
)QQ, -
{RR 

MessageBoxUU 
.UU 
ShowUU 
(UU  
$strUU  A
)UUA B
;UUB C
}VV 
}WW 	
publicYY 
staticYY 
voidYY 
RaikingUsuariosYY *
(YY* +
)YY+ ,
{ZZ 	
try[[ 
{\\ 
InstanceContext]] 
instanceContext]]  /
=]]0 1
new]]2 5
InstanceContext]]6 E
(]]E F
new]]F I
ServiciosCallBack]]J [
(]][ \
)]]\ ]
)]]] ^
;]]^ _
ServidorMemorama^^  
.^^  !
ContratosClient^^! 0
server^^1 7
=^^8 9
new^^: =
ServidorMemorama^^> N
.^^N O
ContratosClient^^O ^
(^^^ _
instanceContext^^_ n
)^^n o
;^^o p
server`` 
.`` 
RankingUsuarios`` &
(``& '
)``' (
;``( )
}aa 
catchbb 
(bb %
EndpointNotFoundExceptionbb ,
)bb, -
{cc 

MessageBoxff 
.ff 
Showff 
(ff  
$strff  A
)ffA B
;ffB C
}gg 
}hh 	
publicjj 
staticjj 
voidjj 

SalirLobbyjj %
(jj% &
stringjj& ,
usuariojj- 4
)jj4 5
{kk 	
tryll 
{mm 
InstanceContextnn 
instanceContextnn  /
=nn0 1
newnn2 5
InstanceContextnn6 E
(nnE F
newnnF I
ServiciosCallBacknnJ [
(nn[ \
)nn\ ]
)nn] ^
;nn^ _
ServidorMemoramaoo  
.oo  !
ContratosClientoo! 0
serveroo1 7
=oo8 9
newoo: =
ServidorMemoramaoo> N
.ooN O
ContratosClientooO ^
(oo^ _
instanceContextoo_ n
)oon o
;ooo p
serverpp 
.pp 
LogOutLobbypp "
(pp" #
usuariopp# *
)pp* +
;pp+ ,
}qq 
catchrr 
(rr %
EndpointNotFoundExceptionrr ,
)rr, -
{ss 

MessageBoxvv 
.vv 
Showvv 
(vv  
$strvv  A
)vvA B
;vvB C
}ww 
}yy 	
public{{ 
static{{ 
void{{ 
EmpezarJuego{{ '
({{' (
ServiciosCallBack{{( 9
callBack{{: B
){{B C
{|| 	
try}} 
{~~ 
InstanceContext 
instanceContext  /
=0 1
new2 5
InstanceContext6 E
(E F
callBackF N
)N O
;O P
ServidorMemorama
ÄÄ  
.
ÄÄ  !
ContratosClient
ÄÄ! 0
server
ÄÄ1 7
=
ÄÄ8 9
new
ÄÄ: =
ServidorMemorama
ÄÄ> N
.
ÄÄN O
ContratosClient
ÄÄO ^
(
ÄÄ^ _
instanceContext
ÄÄ_ n
)
ÄÄn o
;
ÄÄo p
server
ÅÅ 
.
ÅÅ 
Empezarjuego
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
}
ÇÇ 
catch
ÉÉ 
(
ÉÉ '
EndpointNotFoundException
ÉÉ ,
)
ÉÉ, -
{
ÑÑ 

MessageBox
áá 
.
áá 
Show
áá 
(
áá  
$str
áá  A
)
ááA B
;
ááB C
}
àà 
}
ââ 	
public
çç 
static
çç 
void
çç 
EnviarPuntaje
çç (
(
çç( )
string
çç) /
usuario
çç0 7
,
çç7 8
int
çç8 ;
puntos
çç< B
)
ççB C
{
éé 	
try
èè 
{
êê 
InstanceContext
ëë 
instanceContext
ëë  /
=
ëë0 1
new
ëë2 5
InstanceContext
ëë6 E
(
ëëE F
new
ëëF I
ServiciosCallBack
ëëJ [
(
ëë[ \
)
ëë\ ]
)
ëë] ^
;
ëë^ _
ServidorMemorama
íí  
.
íí  !
ContratosClient
íí! 0
server
íí1 7
=
íí8 9
new
íí: =
ServidorMemorama
íí> N
.
ííN O
ContratosClient
ííO ^
(
íí^ _
instanceContext
íí_ n
)
íín o
;
íío p
server
îî 
.
îî 
AgregarPuntuacion
îî (
(
îî( )
usuario
îî) 0
,
îî0 1
puntos
îî2 8
)
îî8 9
;
îî9 :
}
ïï 
catch
ññ 
(
ññ '
EndpointNotFoundException
ññ ,
)
ññ, -
{
óó 

MessageBox
öö 
.
öö 
Show
öö 
(
öö  
$str
öö  A
)
ööA B
;
ööB C
}
õõ 
}
ùù 	
public
†† 
static
†† 
void
†† 
BuscarParaCambiar
†† ,
(
††, -
string
††- 3
usuario
††4 ;
,
††; <
string
††= C
correo
††D J
)
††J K
{
°° 	
try
¢¢ 
{
££ 
InstanceContext
§§ 
instanceContext
§§  /
=
§§0 1
new
§§2 5
InstanceContext
§§6 E
(
§§E F
new
§§F I
ServiciosCallBack
§§J [
(
§§[ \
)
§§\ ]
)
§§] ^
;
§§^ _
ServidorMemorama
••  
.
••  !
ContratosClient
••! 0
server
••1 7
=
••8 9
new
••: =
ServidorMemorama
••> N
.
••N O
ContratosClient
••O ^
(
••^ _
instanceContext
••_ n
)
••n o
;
••o p
server
ßß 
.
ßß *
BuscarParaCambiarContrase√±a
ßß 2
(
ßß2 3
usuario
ßß3 :
,
ßß: ;
correo
ßß< B
)
ßßB C
;
ßßC D
}
®® 
catch
©© 
(
©© '
EndpointNotFoundException
©© ,
)
©©, -
{
™™ 

MessageBox
≠≠ 
.
≠≠ 
Show
≠≠ 
(
≠≠  
$str
≠≠  A
)
≠≠A B
;
≠≠B C
}
ÆÆ 
}
±± 	
public
¥¥ 
static
¥¥ 
void
¥¥ 
EnviarCodigo
¥¥ '
(
¥¥' (
string
¥¥( .
usuario
¥¥/ 6
,
¥¥6 7
string
¥¥8 >
codigo
¥¥? E
)
¥¥E F
{
µµ 	
try
∂∂ 
{
∑∑ 
InstanceContext
∏∏ 
instanceContext
∏∏  /
=
∏∏0 1
new
∏∏2 5
InstanceContext
∏∏6 E
(
∏∏E F
new
∏∏F I
ServiciosCallBack
∏∏J [
(
∏∏[ \
)
∏∏\ ]
)
∏∏] ^
;
∏∏^ _
ServidorMemorama
ππ  
.
ππ  !
ContratosClient
ππ! 0
server
ππ1 7
=
ππ8 9
new
ππ: =
ServidorMemorama
ππ> N
.
ππN O
ContratosClient
ππO ^
(
ππ^ _
instanceContext
ππ_ n
)
ππn o
;
ππo p
server
ªª 
.
ªª &
validarCodigoContrase√±a
ªª .
(
ªª. /
codigo
ªª/ 5
,
ªª5 6
usuario
ªª7 >
)
ªª> ?
;
ªª? @
}
ºº 
catch
ΩΩ 
(
ΩΩ '
EndpointNotFoundException
ΩΩ ,
)
ΩΩ, -
{
ææ 

MessageBox
¡¡ 
.
¡¡ 
Show
¡¡ 
(
¡¡  
$str
¡¡  A
)
¡¡A B
;
¡¡B C
}
¬¬ 
}
≈≈ 	
public
»» 
static
»» 
void
»»  
CambiarContrase√±a
»» ,
(
»», -
string
»»- 3
usuario
»»4 ;
,
»»; <
string
»»= C
contrase√±a
»»D N
)
»»N O
{
…… 	
try
   
{
ÀÀ 
InstanceContext
ÃÃ 
instanceContext
ÃÃ  /
=
ÃÃ0 1
new
ÃÃ2 5
InstanceContext
ÃÃ6 E
(
ÃÃE F
new
ÃÃF I
ServiciosCallBack
ÃÃJ [
(
ÃÃ[ \
)
ÃÃ\ ]
)
ÃÃ] ^
;
ÃÃ^ _
ServidorMemorama
ÕÕ  
.
ÕÕ  !
ContratosClient
ÕÕ! 0
server
ÕÕ1 7
=
ÕÕ8 9
new
ÕÕ: =
ServidorMemorama
ÕÕ> N
.
ÕÕN O
ContratosClient
ÕÕO ^
(
ÕÕ^ _
instanceContext
ÕÕ_ n
)
ÕÕn o
;
ÕÕo p
server
œœ 
.
œœ  
CambiarContrase√±a
œœ (
(
œœ( )
contrase√±a
œœ) 3
,
œœ3 4
usuario
œœ5 <
)
œœ< =
;
œœ= >
}
–– 
catch
—— 
(
—— '
EndpointNotFoundException
—— ,
)
——, -
{
““ 

MessageBox
’’ 
.
’’ 
Show
’’ 
(
’’  
$str
’’  A
)
’’A B
;
’’B C
}
÷÷ 
}
ÿÿ 	
public
⁄⁄ 
static
⁄⁄ 
void
⁄⁄ 
HacerMovimiento
⁄⁄ *
(
⁄⁄* +
int
⁄⁄+ .
id
⁄⁄/ 1
,
⁄⁄1 2
ServiciosCallBack
⁄⁄2 C
juego
⁄⁄D I
)
⁄⁄I J
{
€€ 	
try
‹‹ 
{
›› 
InstanceContext
ﬂﬂ 
instanceContext
ﬂﬂ  /
=
ﬂﬂ0 1
new
ﬂﬂ2 5
InstanceContext
ﬂﬂ6 E
(
ﬂﬂE F
juego
ﬂﬂF K
)
ﬂﬂK L
;
ﬂﬂL M
ServidorMemorama
··  
.
··  !
ContratosClient
··! 0
server
··1 7
=
··8 9
new
··: =
ServidorMemorama
··> N
.
··N O
ContratosClient
··O ^
(
··^ _
instanceContext
··_ n
)
··n o
;
··o p
server
„„ 
.
„„ 

PasarCarta
„„ !
(
„„! "
id
„„" $
)
„„$ %
;
„„% &
}
‰‰ 
catch
ÂÂ 
(
ÂÂ '
EndpointNotFoundException
ÂÂ ,
)
ÂÂ, -
{
ÊÊ 

MessageBox
ÈÈ 
.
ÈÈ 
Show
ÈÈ 
(
ÈÈ  
$str
ÈÈ  A
)
ÈÈA B
;
ÈÈB C
}
ÍÍ 
}
ÏÏ 	
public
ÔÔ 
static
ÔÔ 
void
ÔÔ 
BanearJugador
ÔÔ (
(
ÔÔ( )
string
ÔÔ) /
jugador
ÔÔ0 7
)
ÔÔ7 8
{
 	
try
ÒÒ 
{
ÚÚ 
InstanceContext
ÛÛ 
instanceContext
ÛÛ  /
=
ÛÛ0 1
new
ÛÛ2 5
InstanceContext
ÛÛ6 E
(
ÛÛE F
new
ÛÛF I
ServiciosCallBack
ÛÛJ [
(
ÛÛ[ \
)
ÛÛ\ ]
)
ÛÛ] ^
;
ÛÛ^ _
ServidorMemorama
ÙÙ  
.
ÙÙ  !
ContratosClient
ÙÙ! 0
server
ÙÙ1 7
=
ÙÙ8 9
new
ÙÙ: =
ServidorMemorama
ÙÙ> N
.
ÙÙN O
ContratosClient
ÙÙO ^
(
ÙÙ^ _
instanceContext
ÙÙ_ n
)
ÙÙn o
;
ÙÙo p
server
ıı 
.
ıı 
verificarReportes
ıı (
(
ıı( )
jugador
ıı) 0
)
ıı0 1
;
ıı1 2
}
¯¯ 
catch
˘˘ 
(
˘˘ '
EndpointNotFoundException
˘˘ ,
)
˘˘, -
{
˙˙ 

MessageBox
˝˝ 
.
˝˝ 
Show
˝˝ 
(
˝˝  
$str
˝˝  A
)
˝˝A B
;
˝˝B C
}
˛˛ 
}
ÄÄ 	
public
ÖÖ 
static
ÖÖ 
void
ÖÖ 
CartaEquivocada
ÖÖ *
(
ÖÖ* +
ServiciosCallBack
ÖÖ+ <
juego
ÖÖ= B
)
ÖÖB C
{
ÜÜ 	
try
áá 
{
àà 
InstanceContext
ää 
instanceContext
ää  /
=
ää0 1
new
ää2 5
InstanceContext
ää6 E
(
ääE F
juego
ääF K
)
ääK L
;
ääL M
ServidorMemorama
åå  
.
åå  !
ContratosClient
åå! 0
server
åå1 7
=
åå8 9
new
åå: =
ServidorMemorama
åå> N
.
ååN O
ContratosClient
ååO ^
(
åå^ _
instanceContext
åå_ n
)
åån o
;
ååo p
server
éé 
.
éé 
CartaEquivocada
éé &
(
éé& '
)
éé' (
;
éé( )
}
èè 
catch
êê 
(
êê '
EndpointNotFoundException
êê ,
)
êê, -
{
ëë 

MessageBox
îî 
.
îî 
Show
îî 
(
îî  
$str
îî  A
)
îîA B
;
îîB C
}
ïï 
}
óó 	
}
úú 
}ùù ©Y
]C:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\ServiciosCallBack.cs
	namespace 	
Memorama_Client
 
{		 
[ 
CallbackBehavior 
( 
ConcurrencyMode %
=& '
ConcurrencyMode( 7
.7 8
	Reentrant8 A
)A B
]B C
public 

class 
ServiciosCallBack "
:# $
IContratosCallback% 7
{ 
public 
ServiciosCallBack  
calbackpapa! ,
;, -
public 
	MemoramaM 
juego 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
event 
EventHandler !
<! "
int" %
>% &
userDidCard' 2
;2 3
public 
event 
EventHandler !
<! "
bool" &
>& '
cambioDeTurno( 5
;5 6
public!! 
void!! 
GetLoginResult!! "
(!!" #
LoginResults!!# /
	resultado!!0 9
)!!9 :
{"" 	
if## 
(## 
	resultado## 
==## 
LoginResults## )
.##) *
UsuarioEncontrado##* ;
)##; <
{$$ 
MenuPrincipal&& 
ventanaprincipal&& .
=&&/ 0
new&&1 4
MenuPrincipal&&5 B
(&&B C
)&&C D
;&&D E
ventanaprincipal''  
.''  !
Show''! %
(''% &
)''& '
;''' (
}** 
else++ 
if++ 
(++ 
	resultado++ 
==++ !
LoginResults++" .
.++. /
NoExisteUrsuario++/ ?
)++? @
{,, 

MessageBox-- 
.-- 
Show-- 
(--  
$str--  3
)--3 4
;--4 5
}.. 
else// 
{00 

MessageBox11 
.11 
Show11 
(11  
$str11  8
)118 9
;119 :
}22 
}33 	
public55 
void55  
GetRegistroResultado55 (
(55( )
ResultadosRegistro55) ;
	resultado55< E
)55E F
{66 	
if77 
(77 
	resultado77 
==77 
ResultadosRegistro77 /
.77/ 0
RegistradoConExito770 B
)77B C
{88 

MessageBox99 
.99 
Show99 
(99  
$str99  6
)996 7
;997 8
}<< 
else== 
{>> 

MessageBox?? 
.?? 
Show?? 
(??  
$str??  B
)??B C
;??C D
}@@ 
}BB 	
publicFF 
voidFF "
GetValidacionResultadoFF *
(FF* +
ResultadoValidacionFF+ >
	resultadoFF? H
)FFH I
{GG 	
ifHH 
(HH 
	resultadoHH 
==HH 
ResultadoValidacionHH 0
.HH0 1
CodigoCorrectoHH1 ?
)HH? @
{II 

MessageBoxJJ 
.JJ 
ShowJJ 
(JJ  
$strJJ  3
)JJ3 4
;JJ4 5
MenuPrincipalLL 
ventanaprincipalLL .
=LL/ 0
newLL1 4
MenuPrincipalLL5 B
(LLB C
)LLC D
;LLD E
ventanaprincipalMM  
.MM  !
ShowMM! %
(MM% &
)MM& '
;MM' (
}NN 
elseOO 
ifOO 
(OO 
	resultadoOO 
==OO !
ResultadoValidacionOO" 5
.OO5 6
CodigoIncorrectoOO6 F
)OOF G
{PP 

MessageBoxQQ 
.QQ 
ShowQQ 
(QQ  
$strQQ  3
)QQ3 4
;QQ4 5
}RR 
elseRR 
ifRR 
(RR 
	resultadoRR 
==RR !
ResultadoValidacionRR" 5
.RR5 6"
NoseEncuentraElUsuarioRR6 L
)RRL M
{SS 

MessageBoxTT 
.TT 
ShowTT 
(TT  
$strTT  E
)TTE F
;TTF G
}UU 
}XX 	
publicZZ 
voidZZ 
RecibirMensajesZZ #
(ZZ# $
stringZZ$ *
sourceZZ+ 1
,ZZ1 2
stringZZ3 9
messageZZ: A
)ZZA B
{[[ 	
throw\\ 
new\\ #
NotImplementedException\\ -
(\\- .
)\\. /
;\\/ 0
}]] 	
public`` 
void`` 
GetUsuariosOnline`` %
(``% &
string``& ,
[``, -
]``- .
usuariosConectados``/ A
)``A B
{aa 	
Lobbycc 
lobbycc 
=cc 
newcc 
Lobbycc #
(cc# $
thiscc$ (
.cc( )
calbackpapacc) 4
)cc4 5
;cc5 6 
ObservableCollectiondd  
<dd  !
stringdd! '
>dd' (
misUsuariosdd) 4
=dd5 6
newdd7 : 
ObservableCollectiondd; O
<ddO P
stringddP V
>ddV W
(ddW X
usuariosConectadosddX j
)ddj k
;ddk l
lobbyff 
.ff "
ListUsuariosConectadosff (
.ff( )
ItemsSourceff) 4
=ff5 6
misUsuariosff7 B
;ffB C
lobbygg 
.gg 
Showgg 
(gg 
)gg 
;gg 
}hh 	
publicll 
voidll 

GetRankingll 
(ll 
UsuarioRankingll -
[ll- .
]ll. /
rankingll0 7
)ll7 8
{mm 	
Rainkingnn 
ventanaRikingnn "
=nn# $
newnn% (
Rainkingnn) 1
(nn1 2
)nn2 3
;nn3 4 
ObservableCollectionoo  
<oo  !
UsuarioRankingoo! /
>oo/ 0
usuarioRankingoo1 ?
=oo@ A
newooB E 
ObservableCollectionooF Z
<ooZ [
UsuarioRankingoo[ i
>ooi j
(ooj k
rankingook r
)oor s
;oos t
ventanaRikingpp 
.pp 
lvRankigpp "
.pp" #
ItemsSourcepp# .
=pp/ 0
usuarioRankingpp1 ?
;pp? @
ventanaRikingqq 
.qq 
Showqq 
(qq 
)qq  
;qq  !
}rr 	
publictt 
voidtt 
GetCartatt 
(tt 
inttt  
posiciontt! )
)tt) *
{uu 	
varww 
	tempEventww 
=ww 
userDidCardww '
;ww' (
ifxx 
(xx 
	tempEventxx 
!=xx 
nullxx !
)xx! "
{yy 
	tempEventzz 
(zz 
thiszz 
,zz 
posicionzz '
)zz' (
;zz( )
}|| 
}
ÅÅ 	
public
ÉÉ 
void
ÉÉ 
GetJuego
ÉÉ 
(
ÉÉ 
int
ÉÉ  
numero
ÉÉ! '
)
ÉÉ' (
{
ÑÑ 	
JuegoM
áá 
multi
áá 
=
áá 
new
áá 
JuegoM
áá %
(
áá% &
numero
áá& ,
,
áá, -
this
áá- 1
.
áá1 2
calbackpapa
áá2 =
)
áá= >
;
áá> ?
multi
àà 
.
àà 
Show
àà 
(
àà 
)
àà 
;
àà 
}
ää 	
public
åå 
void
åå "
GetResultadoBusqueda
åå (
(
åå( )
string
åå) /
usuario
åå0 7
)
åå7 8
{
çç 	
RecibirCodigo
éé 
ventana
éé !
=
éé" #
new
éé$ '
RecibirCodigo
éé( 5
(
éé5 6
usuario
éé6 =
)
éé= >
;
éé> ?
ventana
èè 
.
èè 
Show
èè 
(
èè 
)
èè 
;
èè 
}
ëë 	
public
ìì 
void
ìì 
NoExisteUsuario
ìì #
(
ìì# $
)
ìì$ %
{
îî 	

MessageBox
ïï 
.
ïï 
Show
ïï 
(
ïï 
$str
ïï C
)
ïïC D
;
ïïD E
}
ññ 	
public
òò 
void
òò 
correoEquivocado
òò $
(
òò$ %
)
òò% &
{
ôô 	

MessageBox
öö 
.
öö 
Show
öö 
(
öö 
$str
öö /
)
öö/ 0
;
öö0 1
}
õõ 	
public
ùù 
void
ùù *
NosepudocambiarLaContrase√±a
ùù /
(
ùù/ 0
)
ùù0 1
{
ûû 	

MessageBox
üü 
.
üü 
Show
üü 
(
üü 
$str
üü >
)
üü> ?
;
üü? @
}
†† 	
public
¢¢ 
void
¢¢ 
UsuarioEncontrado
¢¢ %
(
¢¢% &
string
¢¢& ,
usuario
¢¢- 4
)
¢¢4 5
{
££ 	

MessageBox
§§ 
.
§§ 
Show
§§ 
(
§§ 
$str
§§ 0
)
§§0 1
;
§§1 2
}
•• 	
public
ßß 
void
ßß 
CodigoValidado
ßß "
(
ßß" #
string
ßß# )
usuario
ßß* 1
)
ßß1 2
{
®® 	

MessageBox
©© 
.
©© 
Show
©© 
(
©© 
$str
©© -
)
©©- .
;
©©. /
NuevaContrase√±a
™™ 
ventana
™™ #
=
™™$ %
new
™™& )
NuevaContrase√±a
™™* 9
(
™™9 :
usuario
™™: A
)
™™A B
;
™™B C
ventana
´´ 
.
´´ 
Show
´´ 
(
´´ 
)
´´ 
;
´´ 
}
¨¨ 	
public
ÆÆ 
void
ÆÆ !
Contrase√±aCambiada
ÆÆ &
(
ÆÆ& '
)
ÆÆ' (
{
ØØ 	

MessageBox
∞∞ 
.
∞∞ 
Show
∞∞ 
(
∞∞ 
$str
∞∞ ?
)
∞∞? @
;
∞∞@ A
}
±± 	
public
≥≥ 
void
≥≥ 
EstadoReporte
≥≥ !
(
≥≥! "
)
≥≥" #
{
¥¥ 	

MessageBox
µµ 
.
µµ 
Show
µµ 
(
µµ 
$str
µµ 7
)
µµ7 8
;
µµ8 9
}
∂∂ 	
public
∫∫ 
void
∫∫ 
GetMovimiento
∫∫ !
(
∫∫! "
Boolean
∫∫" )
bandera
∫∫* 1
,
∫∫1 2
int
∫∫3 6
primeraCarta
∫∫7 C
,
∫∫C D
int
∫∫E H
segundaCarta
∫∫I U
)
∫∫U V
{
ªª 	
throw
ºº 
new
ºº %
NotImplementedException
ºº -
(
ºº- .
)
ºº. /
;
ºº/ 0
}
øø 	
public
≈≈ 
void
≈≈ 
GetTurno
≈≈ 
(
≈≈ 
bool
≈≈ !
turno
≈≈" '
)
≈≈' (
{
∆∆ 	
var
«« 
	tempEvent
«« 
=
«« 
cambioDeTurno
«« )
;
««) *
if
»» 
(
»» 
	tempEvent
»» 
!=
»» 
null
»» !
)
»»! "
{
…… 
	tempEvent
   
(
   
this
   
,
   
turno
    %
)
  % &
;
  & '
}
ÃÃ 
}
ÕÕ 	
}
◊◊ 
}ÿÿ µ
fC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Validaciones\ValidarCampos.cs
	namespace 	
Memorama_Client
 
. 
Validaciones &
{ 
public 

class 
ValidarCampos 
{ 
public 
enum  
ResultadosValidacion (
{ 	
Contrase√±aValida 
, 
Contrase√±aInvalida 
, 
UsuarioValido 
, 
UsuarioInvalido 
, 
CorreoValido 
, 
CorreoInvalido 
, 
N√∫meroV√°lido 
, 
N√∫meroInv√°lido 
} 	
public  
ResultadosValidacion #
ValidarContrase√±a$ 5
(5 6
string6 <
contrase√±a= G
)G H
{   	
string!! 
	ValidChar!! 
=!! 
$str!! I
;!!I J
if## 
(## 
Regex## 
.## 
IsMatch## 
(## 
contrase√±a## (
,##( )
	ValidChar##* 3
)##3 4
)##4 5
{$$ 
return&&  
ResultadosValidacion&& +
.&&+ ,
Contrase√±aValida&&, <
;&&< =
}(( 
return**  
ResultadosValidacion** '
.**' (
Contrase√±aInvalida**( :
;**: ;
},, 	
public..  
ResultadosValidacion.. #
ValidarUsuario..$ 2
(..2 3
string..3 9
usuario..: A
)..A B
{// 	
string00 
	ValidChar00 
=00 
$str00 0
;000 1
if11 
(11 
Regex11 
.11 
IsMatch11 
(11 
usuario11 %
,11% &
	ValidChar11' 0
)110 1
)111 2
{22 
return33  
ResultadosValidacion33 +
.33+ ,
UsuarioValido33, 9
;339 :
}44 
return55  
ResultadosValidacion55 '
.55' (
UsuarioInvalido55( 7
;557 8
}77 	
public99  
ResultadosValidacion99 #
ValidarCorreo99$ 1
(991 2
string992 8
correo999 ?
)99? @
{:: 	
string;; 
patr√≥n;; 
=;; 
$str;; O
;;;O P
if<< 
(<< 
Regex<< 
.<< 
IsMatch<< 
(<< 
correo<< $
,<<$ %
patr√≥n<<& ,
)<<, -
)<<- .
{== 
return>>  
ResultadosValidacion>> +
.>>+ ,
CorreoValido>>, 8
;>>8 9
}?? 
return@@  
ResultadosValidacion@@ '
.@@' (
CorreoInvalido@@( 6
;@@6 7
}AA 	
publicCC  
ResultadosValidacionCC #
ValidarN√∫meroCC$ 1
(CC1 2
stringCC2 8
n√∫meroCC9 ?
)CC? @
{DD 	
stringEE 
patr√≥nEE 
=EE 
$strEE '
;EE' (
ifFF 
(FF 
RegexFF 
.FF 
IsMatchFF 
(FF 
n√∫meroFF $
,FF$ %
patr√≥nFF& ,
)FF, -
)FF- .
{GG 
returnHH  
ResultadosValidacionHH +
.HH+ ,
N√∫meroV√°lidoHH, 8
;HH8 9
}II 
returnJJ  
ResultadosValidacionJJ '
.JJ' (
N√∫meroInv√°lidoJJ( 6
;JJ6 7
}KK 	
}OO 
}PP ˚
TC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\App.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public

 

partial

 
class

 
App

 
:

 
Application

 *
{ 
App 
( 
) 
{ 
System 
. 
	Threading 
. 
Thread #
.# $
CurrentThread$ 1
.1 2
CurrentUICulture2 B
=C D
newE H
SystemI O
.O P
GlobalizationP ]
.] ^
CultureInfo^ i
(i j
$strj n
)n o
;o p
} 	
} 
} á 
`C:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\ValidarRegistro.xaml.cs
	namespace 	
Memorama_Client
 
{ 
public 

partial 
class 
ValidarRegistro (
:) *
Window+ 1
{ 
private 
Usuario 
usuario 
;  
public 
ValidarRegistro 
( 
Usuario &
usu' *
)* +
{ 	
InitializeComponent 
(  
)  !
;! "
usuario 
= 
usu 
; 
} 	
private 
enum 
ChecResults  
{ 	
Passed 
, 
Failed 
} 	
private 
ChecResults 
CheckEmptyFields ,
(, -
)- .
{ 	
ChecResults 
check 
= 
ChecResults  +
.+ ,
Failed, 2
;2 3
if 
( !
txtCodigoVerificacion %
.% &
Text& *
==+ -
string. 4
.4 5
Empty5 :
): ;
{ 
check 
= 
ChecResults #
.# $
Failed$ *
;* +
}   
else!! 
{"" 
check## 
=## 
ChecResults## #
.### $
Passed##$ *
;##* +
}$$ 
return%% 
check%% 
;%% 
}&& 	
private(( 
ChecResults(( 
CheckFields(( '
(((' (
)((( )
{)) 	
ChecResults** 
check** 
=** 
ChecResults**  +
.**+ ,
Failed**, 2
;**2 3
Validaciones++ 
.++ 
ValidarCampos++ &
validarCampos++' 4
=++5 6
new++7 :
Validaciones++; G
.++G H
ValidarCampos++H U
(++U V
)++V W
;++W X
if,, 
(,, 
CheckEmptyFields,,  
(,,  !
),,! "
==,,# %
ChecResults,,& 1
.,,1 2
Failed,,2 8
),,8 9
{-- 

MessageBox.. 
... 
Show.. 
(..  
$str..  ;
)..; <
;..< =
check// 
=// 
ChecResults// #
.//# $
Failed//$ *
;//* +
}00 
else11 
if11 
(11 
validarCampos11 "
.11" #
ValidarN√∫mero11# 0
(110 1!
txtCodigoVerificacion111 F
.11F G
Text11G K
)11K L
==11M O
Validaciones11P \
.11\ ]
ValidarCampos11] j
.11j k 
ResultadosValidacion11k 
.	11 Ä
N√∫meroInv√°lido
11Ä é
)
11é è
{22 

MessageBox33 
.33 
Show33 
(33  
$str33  Z
)33Z [
;33[ \
}44 
else77 
{88 
check99 
=99 
ChecResults99 #
.99# $
Passed99$ *
;99* +
}:: 
return;; 
check;; 
;;; 
}<< 	
private>> 
void>> 
btnVerificar_Click>> '
(>>' (
object>>( .
sender>>/ 5
,>>5 6
RoutedEventArgs>>7 F
e>>G H
)>>H I
{?? 	
if@@ 
(@@ 
CheckFields@@ 
(@@ 
)@@ 
==@@  
ChecResults@@! ,
.@@, -
Passed@@- 3
)@@3 4
{AA 
stringBB 
codigoVerificacionBB )
=BB* +!
txtCodigoVerificacionBB, A
.BBA B
TextBBB F
;BBF G
ValidarRegistroDD 
(DD  
usuarioDD  '
,DD' (
codigoVerificacionDD) ;
)DD; <
;DD< =
}EE 
}FF 	
}GG 
}HH ™
cC:\Users\jhoni\Documents\Memorama-Client\Memorama-Client\Memorama-Client\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str *
)* +
]+ ,
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[   
assembly   	
:  	 

	ThemeInfo   
(   &
ResourceDictionaryLocation!! 
.!! 
None!! #
,!!# $&
ResourceDictionaryLocation$$ 
.$$ 
SourceAssembly$$ -
)'' 
]'' 
[44 
assembly44 	
:44	 

AssemblyVersion44 
(44 
$str44 $
)44$ %
]44% &
[55 
assembly55 	
:55	 

AssemblyFileVersion55 
(55 
$str55 (
)55( )
]55) *